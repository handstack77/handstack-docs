!function(s){"object"==typeof module&&module.exports?module.exports=s.default=s:"function"==typeof define&&define.amd?define("highcharts/modules/drag-panes",["highcharts","highcharts/modules/stock"],function(e){return s(e),s.Highcharts=e,s}):s("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(i){"use strict";var e=i?i._modules:{};function s(e,s,t,o){e.hasOwnProperty(s)||(e[s]=o.apply(null,t),"function"==typeof CustomEvent&&i.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:s,module:e[s]}})))}s(e,"Extensions/DragPanes/AxisResizerDefaults.js",[],function(){return{minLength:"10%",maxLength:"100%",resize:{controlledAxis:{next:[],prev:[]},enabled:!1,cursor:"ns-resize",lineColor:"#cccccc",lineDashStyle:"Solid",lineWidth:4,x:0,y:0}}}),s(e,"Extensions/DragPanes/AxisResizer.js",[e["Extensions/DragPanes/AxisResizerDefaults.js"],e["Core/Utilities.js"]],function(e,s){const{addEvent:a,clamp:P,isNumber:A,relativeLength:E}=s;class t{constructor(e){this.init(e)}init(e,s){this.axis=e,this.options=e.options.resize||{},this.render(),s||this.addMouseEvents()}render(){const e=this,s=e.axis,t=s.chart,o=e.options,i=o.x||0,n=o.y,r=P(s.top+s.height+n,t.plotTop,t.plotTop+t.plotHeight);let a={};t.styledMode||(a={cursor:o.cursor,stroke:o.lineColor,"stroke-width":o.lineWidth,dashstyle:o.lineDashStyle}),e.lastPos=r-n,e.controlLine||(e.controlLine=t.renderer.path().addClass("highcharts-axis-resizer")),e.controlLine.add(s.axisGroup);var h=t.styledMode?e.controlLine.strokeWidth():o.lineWidth;a.d=t.renderer.crispLine([["M",s.left+i,r],["L",s.left+s.width+i,r]],h),e.controlLine.attr(a)}addMouseEvents(){const s=this,e=s.controlLine.element,t=s.axis.chart.container,o=[];var i,n,r;s.mouseMoveHandler=i=e=>s.onMouseMove(e),s.mouseUpHandler=n=e=>s.onMouseUp(e),s.mouseDownHandler=r=()=>s.onMouseDown(),o.push(a(t,"mousemove",i),a(t.ownerDocument,"mouseup",n),a(e,"mousedown",r),a(t,"touchmove",i),a(t.ownerDocument,"touchend",n),a(e,"touchstart",r)),s.eventsToUnbind=o}onMouseMove(e){if(!e.touches||0!==e.touches[0].pageX){const s=this.axis.chart.pointer;this.grabbed&&s&&(this.hasDragged=!0,this.updateAxes(s.normalize(e).chartY-(this.options.y||0)))}}onMouseUp(e){const s=this.axis.chart.pointer;this.hasDragged&&s&&this.updateAxes(s.normalize(e).chartY-(this.options.y||0)),this.grabbed=this.hasDragged=this.axis.chart.activeResizer=void 0}onMouseDown(){this.axis.chart.pointer?.reset(!1,0),this.grabbed=this.axis.chart.activeResizer=!0}updateAxes(o){const i=this,n=i.axis.chart,e=i.options.controlledAxis,s=0===e.next.length?[n.yAxis.indexOf(i.axis)+1]:e.next,r=[i.axis].concat(e.prev),a=[],h=n.plotTop,c=n.plotHeight,d=h+c,l=e=>100*e/c+"%",u=(e,s,t)=>Math.round(P(e,s,t));let p=!1,x=(o=P(o,h,d))-i.lastPos;if(!(x*x<1)){let t=!0;for(const m of[r,s])for(const v of m){const y=A(v)?n.yAxis[v]:t?v:n.get(v),z=y&&y.options,D={};let e,s;var f,g;!z||z.isInternal?t=!1:(s=y.top,f=Math.round(E(z.minLength||NaN,c)),g=Math.round(E(z.maxLength||NaN,c)),t?((e=u(o-s,f,g))===g&&(p=!0),o=s+e,a.push({axis:y,options:{height:l(e)}})):(x=o-i.lastPos,e=u(y.len-x,f,g),(s=y.top+x)+e>d&&(o+=g=d-e-s,s+=g),(e=s<h&&(s=h)+e>d?c:e)===f&&(p=!0),a.push({axis:y,options:{top:l(s-h),height:l(e)}})),t=!1,D.height=e)}if(!p){for(const M of a)M.axis.update(M.options,!1);n.redraw(!1)}}}destroy(){const e=this.axis;delete e.resizer,this.eventsToUnbind&&this.eventsToUnbind.forEach(e=>e()),this.controlLine.destroy();for(const s of Object.keys(this))this[s]=null}}return t.resizerOptions=e,t}),s(e,"Extensions/DragPanes/DragPanes.js",[e["Extensions/DragPanes/AxisResizer.js"],e["Core/Defaults.js"],e["Core/Utilities.js"]],function(i,e,s){const t=e["defaultOptions"],{addEvent:o,merge:n,wrap:r}=s;function a(){const e=this,s=e.resizer,t=e.options.resize;var o;t&&(o=!1!==t.enabled,s?o?s.init(e,!0):s.destroy():o&&(e.resizer=new i(e)))}function h(e){!e.keepEvents&&this.resizer&&this.resizer.destroy()}function c(e){this.chart.activeResizer||e.apply(this,[].slice.call(arguments,1))}function d(e){this.chart.activeResizer||e.apply(this,[].slice.call(arguments,1))}return{compose:function(e,s){e.keepProps.includes("resizer")||(n(!0,t.yAxis,i.resizerOptions),e.keepProps.push("resizer"),o(e,"afterRender",a),o(e,"destroy",h),r(s.prototype,"runPointActions",d),r(s.prototype,"drag",c))}}}),s(e,"masters/modules/drag-panes.src.js",[e["Core/Globals.js"],e["Extensions/DragPanes/AxisResizer.js"],e["Extensions/DragPanes/DragPanes.js"]],function(e,s,t){const o=e;return o.AxisResizer=s,t.compose(o.Axis,o.Pointer),e})});