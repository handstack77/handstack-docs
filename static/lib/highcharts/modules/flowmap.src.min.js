!function(o){"object"==typeof module&&module.exports?module.exports=o.default=o:"function"==typeof define&&define.amd?define("highcharts/modules/flowmap",["highcharts"],function(t){return o(t),o.Highcharts=t,o}):o("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(s){"use strict";var t=s?s._modules:{};function o(t,o,i,e){t.hasOwnProperty(o)||(t[o]=e.apply(null,i),"function"==typeof CustomEvent&&s.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:o,module:t[o]}})))}o(t,"Series/FlowMap/FlowMapPoint.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o){var{prototype:{pointClass:t}}=t["seriesTypes"]["mapline"];const{pick:i,isString:e,isNumber:s}=o;class r extends t{isValid(){let o=!(!this.options.to||!this.options.from);return[this.options.to,this.options.from].forEach(function(t){o=!!(o&&t&&(e(t)||s(i(t[0],t.lat))&&s(i(t[1],t.lon))))}),o}}return r}),o(t,"Series/FlowMap/FlowMapSeries.js",[t["Series/FlowMap/FlowMapPoint.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o,i){const{series:{prototype:{pointClass:d}},seriesTypes:{column:e,map:s,mapline:r}}=o,{addEvent:f,arrayMax:n,arrayMin:a,defined:b,extend:p,isArray:m,merge:C,pick:W,relativeLength:k}=i;class E extends r{static getLength(t,o){return Math.sqrt(t*t+o*o)}static normalize(t,o){var i=this.getLength(t,o);return[t/i,o/i]}static markerEndPath(t,o,i,e){var s,r,n=k(e.width||0,this.getLength(o[0]-t[0],o[1]-t[1])),e=e.markerType||"arrow",[a,p]=this.normalize(o[0]-t[0],o[1]-t[1]);const h=[];return"arrow"===e&&([s,r]=t,s-=a*n,r-=p*n,h.push(["L",s,r]),h.push(["L",i[0],i[1]]),[s,r]=o,s+=a*n,r+=p*n,h.push(["L",s,r])),"mushroom"===e&&([s,r]=t,[e,t]=o,[o,i]=i,o=2*(o-(o=(e-s)/2+s))+o,i=2*(i-(i=(t-r)/2+r))+i,s-=a*n,r-=p*n,h.push(["L",s,r]),e+=a*n,t+=p*n,h.push(["Q",o,i,e,t])),h}animate(t){const o=this.points;t||o.forEach(t=>{if(t.shapeArgs&&m(t.shapeArgs.d)&&t.shapeArgs.d.length){var i=t.shapeArgs.d,e=i[0][1],s=i[0][2];if(e&&s){const r=[];for(let o=0;o<i.length;o++){r.push([...i[o]]);for(let t=1;t<i[o].length;t++)r[o][t]=t%2?e:s}t.graphic&&(t.graphic.attr({d:r}),t.graphic.animate({d:i}))}}})}getLinkWidth(t){var o=this.options.width,i=t.options.weight||this.options.weight;if(t.options.weight=i,o&&!i)return o;t=this.smallestWeight,o=this.greatestWeight;if(!b(i)||!t||!o)return 0;var e=this.options.minWidth;return(i-t)*(this.options.maxWidth-e)/(o-t||1)+e}autoCurve(t,o,i,e,s,r){const n=i-t,a=e-o,p=(i-t)/2+t,h=(e-o)/2+o,l=p-s,c=h-r;i=n*l+a*c,t=n*c-a*l;let d=Math.atan2(t,i),f=180*d/Math.PI;return d=(f=f<0?360+f:f)*Math.PI/180,.7*-Math.sin(d)}pointAttribs(t,o){const i=s.prototype.pointAttribs.call(this,t,o);return i.fill=W(t.options.fillColor,t.options.color,"none"===this.options.fillColor?null:this.options.fillColor,this.color),i["fill-opacity"]=W(t.options.fillOpacity,this.options.fillOpacity),i["stroke-width"]=W(t.options.lineWidth,this.options.lineWidth,1),t.options.opacity&&(i.opacity=t.options.opacity),i}translate(){!this.chart.hasRendered||!this.isDirtyData&&this.hasRendered||(this.processData(),this.generatePoints());const h=[];let l=0,c=0;this.points.forEach(t=>{const o=this.chart,i=o.mapView,e=t.options,s=()=>{t.series.isDirty=!0},r=t=>{t=o.get(t);if(t instanceof d&&t.plotX&&t.plotY)return f(t,"update",s),{x:t.plotX,y:t.plotY}},n=t=>m(t)?{lon:t[0],lat:t[1]}:t;let a,p;"string"==typeof e.from?a=r(e.from):"object"==typeof e.from&&i&&(a=i.lonLatToPixels(n(e.from))),"string"==typeof e.to?p=r(e.to):"object"==typeof e.to&&i&&(p=i.lonLatToPixels(n(e.to))),t.fromPos=a,t.toPos=p,a&&p&&(l+=(a.x+p.x)/2,c+=(a.y+p.y)/2),W(t.options.weight,this.options.weight)&&h.push(W(t.options.weight,this.options.weight))}),this.smallestWeight=a(h),this.greatestWeight=n(h),this.centerOfPoints={x:l/this.points.length,y:c/this.points.length},this.points.forEach(t=>{this.getLinkWidth(t)?(t.fromPos&&(t.plotX=t.fromPos.x,t.plotY=t.fromPos.y),t.shapeType="path",t.shapeArgs=this.getPointShapeArgs(t),t.color=W(t.options.color,t.series.color)):t.shapeArgs={d:[]}})}getPointShapeArgs(t){var{fromPos:o,toPos:i}=t;if(!o||!i)return{};var e=this.getLinkWidth(t)/2,s=t.options,r=C(this.options.markerEnd,s.markerEnd),n=W(s.growTowards,this.options.growTowards),a=o.x||0,o=o.y||0;let p=i.x||0,h=i.y||0,l=W(s.curveFactor,this.options.curveFactor),c=r&&r.enabled&&r.height||0;if(b(l)||(l=this.autoCurve(a,o,p,h,this.centerOfPoints.x,this.centerOfPoints.y)),c){c=k(c,4*e);var s=p-a,d=h-o;const f=a+(s*=.5),m=o+(d*=.5),g=s,v=(s=d,d=-g,f+s*l),P=m+d*l;var[s,d]=E.normalize(v-p,P-h);s*=c,d*=c,p+=s,h+=d}s=p-a,d=h-o;const f=a+(s*=.5),m=o+(d*=.5);let g=s,[u,y]=(s=d,d=-g,E.normalize(s,d));var w=1+.25*Math.sqrt(l*l);u*=e*w,y*=e*w;const v=f+s*l,P=m+d*l;let[x,M]=E.normalize(v-a,P-o);g=x,x=M,M=-g,x*=e,M*=e;var[w,s]=E.normalize(v-p,P-h);g=w,w=-s,s=g,w*=e,s*=e,n&&(x/=e,M/=e,u/=4,y/=4);const L={d:[["M",a-x,o-M],["Q",v-u,P-y,p-w,h-s],["L",p+w,h+s],["Q",v+u,P+y,a+x,o+M],["Z"]]};r&&r.enabled&&L.d&&(d=E.markerEndPath([p-w,h-s],[p+w,h+s],[i.x,i.y],r),L.d.splice(2,0,...d));n=t.options.from,e=t.options.to,a=n.lat,o=n.lon,w=e.lat,s=e.lon;return a&&o&&(t.options.from=+a+", "+ +o),w&&s&&(t.options.to=+w+", "+ +s),L}}return E.defaultOptions=C(r.defaultOptions,{animation:!0,dataLabels:{enabled:!1},fillOpacity:.5,markerEnd:{enabled:!0,height:"40%",width:"40%",markerType:"arrow"},width:1,maxWidth:25,minWidth:5,lineWidth:void 0,tooltip:{headerFormat:'<span style="font-size: 0.8em">{series.name}</span><br/>',pointFormat:"{point.options.from} â†’ {point.options.to}: <b>{point.options.weight}</b>"}}),p(E.prototype,{pointClass:t,pointArrayMap:["from","to","weight"],drawPoints:e.prototype.drawPoints,useMapGeometry:!0}),o.registerSeriesType("flowmap",E),E}),o(t,"masters/modules/flowmap.src.js",[t["Core/Globals.js"]],function(t){return t})});