"use strict";import ParallelCoordinatesDefaults from"./ParallelCoordinatesDefaults.js";import U from"../../Core/Utilities.js";const{addEvent,arrayMax,arrayMin,isNumber,merge,pick,splat}=U;class ParallelAxisAdditions{constructor(a){this.axis=a}setPosition(a,t){const e=this.axis,i=e.chart,s=((this.position||0)+.5)/(i.parallelInfo.counter+1);i.polar?t.angle=360*s:(t[a[0]]=100*s+"%",e[a[1]]=t[a[1]]=0,e[a[2]]=t[a[2]]=null,e[a[3]]=t[a[3]]=null)}}var ParallelAxis;!function(){function t(a){const t=this,e=t.chart,i=t.parallelCoordinates;let s=["left","width","height","top"];var l;e.hasParallelCoordinates&&(e.inverted&&(s=s.reverse()),t.isXAxis?t.options=merge(t.options,ParallelCoordinatesDefaults.xAxis,a.userOptions):(l=e.yAxis.indexOf(t),t.options=merge(t.options,t.chart.options.chart.parallelAxes,a.userOptions),i.position=pick(i.position,0<=l?l:e.yAxis.length),i.setPosition(s,t.options)))}function e(a){var e=this,t=e.chart,i=e.parallelCoordinates;if(i&&t&&t.hasParallelCoordinates&&!e.isXAxis){const s=i.position;let t=[];e.series.forEach(function(a){a.yData&&a.visible&&isNumber(s)&&(a=a.yData[s],t.push.apply(t,splat(a)))}),t=t.filter(isNumber),e.dataMin=arrayMin(t),e.dataMax=arrayMax(t),a.preventDefault()}}function i(){var a=this;a.parallelCoordinates||(a.parallelCoordinates=new ParallelAxisAdditions(a))}(ParallelAxis||(ParallelAxis={})).compose=function(a){a.keepProps.includes("parallel")||((a=a).keepProps.push("parallel"),addEvent(a,"init",i),addEvent(a,"afterSetOptions",t),addEvent(a,"getSeriesExtremes",e))}}();export default ParallelAxis;