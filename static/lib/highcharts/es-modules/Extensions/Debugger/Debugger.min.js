"use strict";import D from"../../Core/Defaults.js";const setOptions=D["setOptions"];import ErrorMessages from"./ErrorMessages.js";import H from"../../Core/Globals.js";const composed=H["composed"];import U from"../../Core/Utilities.js";const{addEvent,find,isNumber,pushUnique}=U,defaultOptions={chart:{displayErrors:!0}};function compose(r){pushUnique(composed,"Debugger")&&(addEvent(r,"beforeRedraw",onChartBeforeRedraw),addEvent(H,"displayError",onHighchartsDisplayError),setOptions(defaultOptions))}function onChartBeforeRedraw(){var r=this.errorElements;if(r&&r.length)for(const e of r)e.destroy();delete this.errorElements}function onHighchartsDisplayError(t){const s=t.chart||find(this.charts.slice().reverse(),r=>!!r);if(s){const i=t.code,n=s.options.chart,a=s.renderer;let r,e,o;if(s.errorElements)for(const d of s.errorElements)d&&d.destroy();n&&n.displayErrors&&a&&(s.errorElements=[],r=isNumber(i)?"Highcharts error #"+i+": "+ErrorMessages[i].text:i,e=s.chartWidth,o=s.chartHeight,r=r.replace(/<h1>(.*)<\/h1>/g,'<br><span style="font-size: 2em">$1</span><br>').replace(/<p>/g,"").replace(/<\/p>/g,"<br>"),s.errorElements[0]=a.rect(2,2,e-4,o-4).attr({"stroke-width":4,stroke:"#ff0000",zIndex:3}).add(),s.errorElements[1]=a.label(r,0,0,"rect",void 0,void 0,void 0,void 0,"debugger").css({color:"#ffffff",fontSize:"0.8em",width:e-16+"px",padding:0}).attr({fill:"rgba(255, 0, 0, 0.9)",width:e,padding:8,zIndex:10}).add(),s.errorElements[1].attr({y:o-s.errorElements[1].getBBox().height}))}}const Debugger={compose:compose};export default Debugger;