"use strict";import BoostChart from"./BoostChart.js";import BoostSeries from"./BoostSeries.js";import H from"../../Core/Globals.js";const{doc,win}=H;import NamedColors from"./NamedColors.js";import U from"../../Core/Utilities.js";const{addEvent,error}=U,contexts=["webgl","experimental-webgl","moz-webgl","webkit-3d"];function compose(o,t,e,s,r){var n=hasWebGLSupport();n||(void 0!==H.initCanvasBoost?H.initCanvasBoost():error(26)),r&&!r.names.lightgoldenrodyellow&&(r.names={...r.names,...NamedColors.defaultHTMLColorMap}),BoostChart.compose(o,n),BoostSeries.compose(e,s,n),addEvent(t,"setExtremes",function(r){for(const c of[this.chart,...this.series].map(o=>o.renderTarget).filter(Boolean)){var{horiz:n,pos:a}=this,i=n?"scaleX":"scaleY",n=n?"translateX":"translateY",l=c?.[i]??1;let o=1,t=0,e=1,s="none";this.isPanning&&(o=(r.scale??1)*l,t=(c?.[n]||0)-o*(r.move||0)+l*a-o*a,e=.7,s="blur(3px)"),c?.attr({[i]:o,[n]:t}).css({transition:"250ms filter, 250ms opacity",filter:s,opacity:e})}})}function hasWebGLSupport(){let t;if(void 0!==win.WebGLRenderingContext){t=doc.createElement("canvas");for(let o=0;o<contexts.length;++o)try{if(null!=t.getContext(contexts[o]))return!0}catch(o){}}return!1}const Boost={compose:compose,hasWebGLSupport:hasWebGLSupport};export default Boost;