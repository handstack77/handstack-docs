"use strict";import DataGroupingAxisComposition from"./DataGroupingAxisComposition.js";import DataGroupingDefaults from"./DataGroupingDefaults.js";import DataGroupingSeriesComposition from"./DataGroupingSeriesComposition.js";import F from"../../Core/Templating.js";const format=F["format"];import H from"../../Core/Globals.js";const composed=H["composed"];import U from"../../Core/Utilities.js";const{addEvent,extend,isNumber,pick,pushUnique}=U;function compose(o,t,e){DataGroupingAxisComposition.compose(o),DataGroupingSeriesComposition.compose(t),e&&pushUnique(composed,"DataGrouping")&&addEvent(e,"headerFormatter",onTooltipHeaderFormatter)}function onTooltipHeaderFormatter(o){const t=this.chart,e=t.time,a=o.labelConfig,i=a.series,r=a.point,s=i.options,p=i.tooltipOptions,m=s.dataGrouping,n=i.xAxis;let u=p.xDateFormat,d,c,g,D,l,f=p[o.isFooter?"footerFormat":"headerFormat"];var F,G;n&&"datetime"===n.options.type&&m&&isNumber(a.key)&&(c=i.currentDataGrouping,g=m.dateTimeLabelFormats||DataGroupingDefaults.common.dateTimeLabelFormats,c?(D=g[c.unitName],1===c.count?u=D[0]:(u=D[1],d=D[2])):!u&&g&&n.dateTime&&(u=n.dateTime.getXDateFormat(a.x,p.dateTimeLabelFormats)),G=(F=pick(i.groupMap?.[r.index].groupStart,a.key))+c?.totalRange-1,l=e.dateFormat(u,F),d&&(l+=e.dateFormat(d,G)),i.chart.styledMode&&(f=this.styledModeFormat(f)),o.text=format(f,{point:extend(a.point,{key:l}),series:i},t),o.preventDefault())}const DataGroupingComposition={compose:compose,groupData:DataGroupingSeriesComposition.groupData};export default DataGroupingComposition;