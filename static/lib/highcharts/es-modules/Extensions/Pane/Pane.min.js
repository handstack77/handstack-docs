"use strict";import CU from"../../Series/CenteredUtilities.js";import PaneComposition from"./PaneComposition.js";import PaneDefaults from"./PaneDefaults.js";import U from"../../Core/Utilities.js";const{extend,merge,splat}=U;class Pane{constructor(t,e){this.coll="pane",this.init(t,e)}init(t,e){this.chart=e,this.background=[],e.pane.push(this),this.setOptions(t)}setOptions(t){this.options=t=merge(PaneDefaults.pane,this.chart.angular?{background:{}}:void 0,t)}render(){const t=this.options,e=this.chart.renderer;if(this.group||(this.group=e.g("pane-group").attr({zIndex:t.zIndex||0}).add()),this.updateCenter(),s=this.options.background){var s=splat(s),r=Math.max(s.length,this.background.length||0);for(let t=0;t<r;t++)s[t]&&this.axis?this.renderBackground(merge(PaneDefaults.background,s[t]),t):this.background[t]&&(this.background[t]=this.background[t].destroy(),this.background.splice(t,1))}}renderBackground(t,e){var s={class:"highcharts-pane "+(t.className||"")};let r="animate";this.chart.styledMode||extend(s,{fill:t.backgroundColor,stroke:t.borderColor,"stroke-width":t.borderWidth}),this.background[e]||(this.background[e]=this.chart.renderer.path().add(this.group),r="attr"),this.background[e][r]({d:this.axis.getPlotBandPath(t.from,t.to,t)}).attr(s)}updateCenter(t){this.center=(t||this.axis||{}).center=CU.getCenter.call(this)}update(t,e){merge(!0,this.options,t),this.setOptions(this.options),this.render(),this.chart.axes.forEach(function(t){t.pane===this&&(t.pane=null,t.update({},e))},this)}}Pane.compose=PaneComposition.compose;export default Pane;