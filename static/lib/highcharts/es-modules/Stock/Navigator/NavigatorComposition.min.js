"use strict";import D from"../../Core/Defaults.js";const setOptions=D["setOptions"];import H from"../../Core/Globals.js";const composed=H["composed"];import NavigatorAxisAdditions from"../../Core/Axis/NavigatorAxisComposition.js";import NavigatorDefaults from"./NavigatorDefaults.js";import NavigatorSymbols from"./NavigatorSymbols.js";import RendererRegistry from"../../Core/Renderer/RendererRegistry.js";const getRendererType=RendererRegistry["getRendererType"];import StockUtilities from"../../Stock/Utilities/StockUtilities.js";const setFixedRange=StockUtilities["setFixedRange"];import U from"../../Core/Utilities.js";const{addEvent,extend,pushUnique}=U;function compose(t,e,o){NavigatorAxisAdditions.compose(e),pushUnique(composed,"Navigator")&&(t.prototype.setFixedRange=setFixedRange,extend(getRendererType().prototype.symbols,NavigatorSymbols),addEvent(o,"afterUpdate",onSeriesAfterUpdate),setOptions({navigator:NavigatorDefaults}))}function onSeriesAfterUpdate(){this.chart.navigator&&!this.options.isInternal&&this.chart.navigator.setBaseSeries(null,!1)}const NavigatorComposition={compose:compose};export default NavigatorComposition;