"use strict";import Chart from"../../Core/Chart/Chart.js";import Navigator from"./Navigator.js";import G from"../../Core/Globals.js";import U from"../../Core/Utilities.js";import Axis from"../../Core/Axis/Axis.js";import standaloneNavigatorDefaults from"./StandaloneNavigatorDefaults.js";const{merge,addEvent,fireEvent,pick}=U;class StandaloneNavigator{static navigator(t,a){t=new StandaloneNavigator(t,a);return G.navigators?G.navigators.push(t):G.navigators=[t],t}constructor(t,a){this.boundAxes=[],this.userOptions=a,this.chartOptions=merge(G.getOptions(),standaloneNavigatorDefaults,{navigator:a});const i=new Chart(t,this.chartOptions);i.options=merge(i.options,{navigator:{enabled:!0},scrollbar:{enabled:!0}}),this.chartOptions.navigator&&this.chartOptions.scrollbar&&(this.chartOptions.navigator.enabled=!0,this.chartOptions.scrollbar.enabled=!0),this.navigator=new Navigator(i),i.navigator=this.navigator,this.initNavigator()}bind(a,i=!0){const r=this,s=a instanceof Chart?a.xAxis[0]:a;if(s instanceof Axis){const{min:e,max:n}=this.navigator.xAxis,o=[];i&&(a=addEvent(s,"setExtremes",t=>{"pan"!==t.trigger&&"zoom"!==t.trigger&&"mouseWheelZoom"!==t.trigger||r.setRange(t.min,t.max,!0,"pan"!==t.trigger,{trigger:s})}),o.push(a));i=addEvent(this.navigator,"setRange",t=>{s.setExtremes(t.min,t.max,t.redraw,t.animation)});o.push(i);let t=this.boundAxes.filter(function(t){return t.axis===s})[0];t||(t={axis:s,callbacks:[]},this.boundAxes.push(t)),t.callbacks=o,s.series.forEach(t=>{t.options.showInNavigator&&r.addSeries(t.options)}),s.setExtremes(e,n),addEvent(s,"destroy",t=>{t.keepEvents||this.unbind(s)})}}unbind(t){if(!t)return this.boundAxes.forEach(({callbacks:t})=>{t.forEach(t=>t())}),void(this.boundAxes.length=0);var a=t instanceof Axis?t:t.xAxis[0];for(let t=this.boundAxes.length-1;0<=t;t--)this.boundAxes[t].axis===a&&(this.boundAxes[t].callbacks.forEach(t=>t()),this.boundAxes.splice(t,1))}destroy(){this.boundAxes.forEach(({callbacks:t})=>{t.forEach(t=>t())}),this.boundAxes.length=0,this.navigator.destroy(),this.navigator.chart.destroy()}update(t,a){this.chartOptions=merge(this.chartOptions,{navigator:t}),this.navigator.chart.update(this.chartOptions,a)}redraw(){this.navigator.chart.redraw()}addSeries(t){this.navigator.chart.addSeries(merge(t,{showInNavigator:pick(t.showInNavigator,!0)})),this.navigator.setBaseSeries()}initNavigator(){const t=this.navigator;t.top=1,t.xAxis.setScale(),t.yAxis.setScale(),t.xAxis.render(),t.yAxis.render(),t.series?.forEach(t=>{t.translate(),t.render(),t.redraw()});var{min:a,max:i}=this.getInitialExtremes();t.chart.xAxis[0].userMin=a,t.chart.xAxis[0].userMax=i,t.render(a,i)}getRange(){var{min:t,max:a}=this.navigator.chart.xAxis[0].getExtremes(),{userMin:i,userMax:r,min:s,max:e}=this.navigator.xAxis.getExtremes();return{min:pick(t,s),max:pick(a,e),dataMin:s,dataMax:e,userMin:i,userMax:r}}setRange(t,a,i,r,s){fireEvent(this.navigator,"setRange",{min:t,max:a,redraw:i,animation:r,eventArguments:merge(s,{trigger:"navigator"})})}getInitialExtremes(){var{min:t,max:a}=this.navigator.xAxis.getExtremes();return{min:t,max:a}}}export default StandaloneNavigator;