"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{error,extend,merge}=U;class ADIndicator extends SMAIndicator{static populateAverage(e,t,r,i,s){var a=t[i][1],o=t[i][2],t=t[i][3],r=r[i];return[e[i],t===a&&t===o||a===o?0:(2*t-o-a)/(a-o)*r]}getValues(e,t){const r=t.period,i=e.xData,s=e.yData,a=t.volumeSeriesID,o=e.chart.get(a),n=o&&o.yData,u=s?s.length:0,c=[],d=[],l=[];let p,m,g;if(!(i.length<=r&&u&&4!==s[0].length)){if(o){for(m=r;m<u;m++)p=c.length,g=ADIndicator.populateAverage(i,s,n,m,r),0<p&&(g[1]+=c[p-1][1]),c.push(g),d.push(g[0]),l.push(g[1]);return{values:c,xData:d,yData:l}}error("Series "+a+" not found! Check `volumeSeriesID`.",!0,e.chart)}}}ADIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}}),extend(ADIndicator.prototype,{nameComponents:!1,nameBase:"Accumulation/Distribution"}),SeriesRegistry.registerSeriesType("ad",ADIndicator);export default ADIndicator;