"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{isArray,merge}=U;function accumulateAverage(e,r,t,a,i){r=r[a],t=i<0?t[a]:t[a][i];e.push([r,t])}function weightedSumArray(e,r){r*=(r+1)/2;return e.reduce(function(e,r,t){return[null,e[1]+r[1]*(t+1)]})[1]/r}function populateAverage(e,r,t,a){var i=weightedSumArray(e,e.length),r=r[a-1];return e.shift(),[r,i]}class WMAIndicator extends SMAIndicator{getValues(e,r){const t=r.period,a=e.xData,i=e.yData,s=i?i.length:0,u=a[0],n=[],o=[],c=[];let p=1,g=-1,l,d,A=i[0];if(!(a.length<t)){isArray(i[0])&&(g=r.index,A=i[0][g]);for(var m=[[u,A]];p!==t;)accumulateAverage(m,a,i,p,g),p++;for(l=p;l<s;l++)d=populateAverage(m,a,i,l),n.push(d),o.push(d[0]),c.push(d[1]),accumulateAverage(m,a,i,l,g);return d=populateAverage(m,a,i,l),n.push(d),o.push(d[0]),c.push(d[1]),{values:n,xData:o,yData:c}}}}WMAIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:3,period:9}}),SeriesRegistry.registerSeriesType("wma",WMAIndicator);export default WMAIndicator;