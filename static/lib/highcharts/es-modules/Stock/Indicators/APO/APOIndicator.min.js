"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const EMAIndicator=SeriesRegistry.seriesTypes["ema"];import U from"../../../Core/Utilities.js";const{extend,merge,error}=U;class APOIndicator extends EMAIndicator{getValues(e,r){const t=r.periods,s=r.index,i=[],o=[],a=[];let n,d;if(2!==t.length||t[1]<=t[0])error('Error: "APO requires two periods. Notice, first period should be lower than the second one."');else{var p=super.getValues.call(this,e,{index:s,period:t[0]}),l=super.getValues.call(this,e,{index:s,period:t[1]});if(p&&l){var c=t[1]-t[0];for(d=0;d<l.yData.length;d++)n=p.yData[d+c]-l.yData[d],i.push([l.xData[d],n]),o.push(l.xData[d]),a.push(n);return{values:i,xData:o,yData:a}}}}}APOIndicator.defaultOptions=merge(EMAIndicator.defaultOptions,{params:{period:void 0,periods:[10,20]}}),extend(APOIndicator.prototype,{nameBase:"APO",nameComponents:["periods"]}),SeriesRegistry.registerSeriesType("apo",APOIndicator);export default APOIndicator;