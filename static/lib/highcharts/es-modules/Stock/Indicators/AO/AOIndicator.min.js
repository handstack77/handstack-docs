"use strict";import H from"../../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{column:{prototype:columnProto},sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,merge,correctFloat,isArray}=U;class AOIndicator extends SMAIndicator{drawGraph(){const o=this,r=o.options,t=o.points,e=o.userOptions.color,s=r.greaterBarColor,a=r.lowerBarColor,i=t[0];let l;if(!e&&i)for(i.color=s,l=1;l<t.length;l++)t[l].y>t[l-1].y?t[l].color=s:t[l].y<t[l-1].y?t[l].color=a:t[l].color=t[l-1].color}getValues(o){const r=34,t=o.xData||[],e=o.yData||[],s=e.length,a=[],i=[],l=[];let n,c,p,d,m,u,g,y,h=0,f=0;if(!(t.length<=r)&&isArray(e[0])&&4===e[0].length){for(g=0;g<33;g++)u=(e[g][1]+e[g][2])/2,29<=g&&(f=correctFloat(f+u)),h=correctFloat(h+u);for(y=33;y<s;y++)u=(e[y][1]+e[y][2])/2,f=correctFloat(f+u),h=correctFloat(h+u),n=f/5,c=h/r,p=correctFloat(n-c),a.push([t[y],p]),i.push(t[y]),l.push(p),d=y+1-5,m=y+1-r,f=correctFloat(f-(e[d][1]+e[d][2])/2),h=correctFloat(h-(e[m][1]+e[m][2])/2);return{values:a,xData:i,yData:l}}}}AOIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:void 0},greaterBarColor:"#06b535",lowerBarColor:"#f21313",threshold:0,groupPadding:.2,pointPadding:.2,crisp:!1,states:{hover:{halo:{size:0}}}}),extend(AOIndicator.prototype,{nameBase:"AO",nameComponents:void 0,markerAttribs:noop,getColumnMetrics:columnProto.getColumnMetrics,crispCol:columnProto.crispCol,translate:columnProto.translate,drawPoints:columnProto.drawPoints}),SeriesRegistry.registerSeriesType("ao",AOIndicator);export default AOIndicator;