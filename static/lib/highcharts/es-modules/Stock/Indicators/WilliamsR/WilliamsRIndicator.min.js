"use strict";import AU from"../ArrayUtilities.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;class WilliamsRIndicator extends SMAIndicator{getValues(e,i){const r=i.period,s=e.xData,t=e.yData,a=t?t.length:0,o=[],l=[],n=[];let m,d,p,c,y,g;if(!(s.length<r)&&isArray(t[0])&&4===t[0].length){for(g=r-1;g<a;g++)m=t.slice(g-r+1,g+1),y=(d=AU.getArrayExtremes(m,2,1))[0],p=((c=d[1])-t[g][3])/(c-y)*-100,s[g]&&(o.push([s[g],p]),l.push(s[g]),n.push(p));return{values:o,xData:l,yData:n}}}}WilliamsRIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:14}}),extend(WilliamsRIndicator.prototype,{nameBase:"Williams %R"}),SeriesRegistry.registerSeriesType("williamsr",WilliamsRIndicator);export default WilliamsRIndicator;