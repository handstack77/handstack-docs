"use strict";import AD from"../AD/ADIndicator.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const EMAIndicator=SeriesRegistry.seriesTypes["ema"];import U from"../../../Core/Utilities.js";const{correctFloat,extend,merge,error}=U;class ChaikinIndicator extends EMAIndicator{getValues(e,r){const i=r.periods,t=r.period,o=[],s=[],a=[];let n,d;if(2!==i.length||i[1]<=i[0])error('Error: "Chaikin requires two periods. Notice, first period should be lower than the second one."');else{e=AD.prototype.getValues.call(this,e,{volumeSeriesID:r.volumeSeriesID,period:t});if(e){var p=super.getValues.call(this,e,{period:i[0]}),l=super.getValues.call(this,e,{period:i[1]});if(p&&l){var c=i[1]-i[0];for(d=0;d<l.yData.length;d++)n=correctFloat(p.yData[d+c]-l.yData[d]),o.push([l.xData[d],n]),s.push(l.xData[d]),a.push(n);return{values:o,xData:s,yData:a}}}}}}ChaikinIndicator.defaultOptions=merge(EMAIndicator.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume",period:9,periods:[3,10]}}),extend(ChaikinIndicator.prototype,{nameBase:"Chaikin Osc",nameComponents:["periods"]}),SeriesRegistry.registerSeriesType("chaikin",ChaikinIndicator);export default ChaikinIndicator;