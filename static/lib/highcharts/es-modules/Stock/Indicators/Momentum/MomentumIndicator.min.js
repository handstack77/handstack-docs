"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;function populateAverage(e,t,r,s,a){t=t[r-1][a]-t[r-s-1][a];return[e[r-1],t]}class MomentumIndicator extends SMAIndicator{getValues(e,t){const r=t.period,s=t.index,a=e.xData,i=e.yData,o=i?i.length:0,n=[],u=[],m=[];let p,d;if(!(a.length<=r)&&isArray(i[0])){for(p=r+1;p<o;p++)d=populateAverage(a,i,p,r,s),n.push(d),u.push(d[0]),m.push(d[1]);return d=populateAverage(a,i,p,r,s),n.push(d),u.push(d[0]),m.push(d[1]),{values:n,xData:u,yData:m}}}}MomentumIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:3}}),extend(MomentumIndicator.prototype,{nameBase:"Momentum"}),SeriesRegistry.registerSeriesType("momentum",MomentumIndicator);export default MomentumIndicator;