"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,merge,pick}=U;function getExtremeIndexInArray(o,e){let r=o[0],n=0,t;for(t=1;t<o.length;t++)("max"===e&&o[t]>=r||"min"===e&&o[t]<=r)&&(r=o[t],n=t);return n}class AroonIndicator extends SMAIndicator{getValues(o,e){const r=e.period,n=o.xData,t=o.yData,i=t?t.length:0,a=[],s=[],p=[];let m,l,d,c,u;for(c=r-1;c<i;c++)d=getExtremeIndexInArray((u=t.slice(c-r+1,c+2)).map(function(o){return pick(o[2],o)}),"min"),m=getExtremeIndexInArray(u.map(function(o){return pick(o[1],o)}),"max")/r*100,l=d/r*100,n[c+1]&&(a.push([n[c+1],m,l]),s.push(n[c+1]),p.push([m,l]));return{values:a,xData:s,yData:p}}}AroonIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),extend(AroonIndicator.prototype,{areaLinesNames:[],linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y"}),MultipleLinesComposition.compose(AroonIndicator),SeriesRegistry.registerSeriesType("aroon",AroonIndicator);export default AroonIndicator;