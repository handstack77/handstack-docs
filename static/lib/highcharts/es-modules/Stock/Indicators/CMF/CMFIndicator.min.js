"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const merge=U["merge"];class CMFIndicator extends SMAIndicator{constructor(){super(...arguments),this.nameBase="Chaikin Money Flow"}isValid(){const e=this.chart,t=this.options,s=this.linkedParent,r=this.volumeSeries||(this.volumeSeries=e.get(t.params.volumeSeriesID)),i=s&&s.yData&&4===s.yData[0].length;function a(e){return e.xData&&e.xData.length>=t.params.period}return!!(s&&r&&a(s)&&a(r)&&i)}getValues(e,t){if(this.isValid())return this.getMoneyFlow(e.xData,e.yData,this.volumeSeries.yData,t.period)}getMoneyFlow(e,t,s,r){const i=t.length,a=[],n=[],o=[],l=[];let u,h,p=-1,c=0,m=0;function d(e,t){var s=e[1],r=e[2],e=e[3];return null!==t&&null!==s&&null!==r&&null!==e&&s!==r?(e-r-(s-e))/(s-r)*t:(p=u,null)}if(0<r&&r<=i){for(u=0;u<r;u++)a[u]=d(t[u],s[u]),c+=s[u],m+=a[u];for(n.push(e[u-1]),o.push(u-p>=r&&0!==c?m/c:null),l.push([n[0],o[0]]);u<i;u++)a[u]=d(t[u],s[u]),c=(c-=s[u-r])+s[u],m=(m-=a[u-r])+a[u],h=[e[u],u-p>=r?m/c:null],n.push(h[0]),o.push(h[1]),l.push([h[0],h[1]])}return{values:l,xData:n,yData:o}}}CMFIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}}),SeriesRegistry.registerSeriesType("cmf",CMFIndicator);export default CMFIndicator;