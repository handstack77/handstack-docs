"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;class PriceEnvelopesIndicator extends SMAIndicator{init(){super.init.apply(this,arguments),this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(e,t){const o=t.period,i=t.topBand,s=t.bottomBand,r=e.xData,n=e.yData,a=n?n.length:0,p=[],l=[],m=[];let d,c,y,b,u,g,h,v;if(!(r.length<o)&&isArray(n[0])&&4===n[0].length){for(v=o;v<=a;v++)u=r.slice(v-o,v),g=n.slice(v-o,v),b=(h=super.getValues({xData:u,yData:g},t)).xData[0],c=(d=h.yData[0])*(1+i),y=d*(1-s),p.push([b,c,d,y]),l.push(b),m.push([c,d,y]);return{values:p,xData:l,yData:m}}}}PriceEnvelopesIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),extend(PriceEnvelopesIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"}),MultipleLinesComposition.compose(PriceEnvelopesIndicator),SeriesRegistry.registerSeriesType("priceenvelopes",PriceEnvelopesIndicator);export default PriceEnvelopesIndicator;