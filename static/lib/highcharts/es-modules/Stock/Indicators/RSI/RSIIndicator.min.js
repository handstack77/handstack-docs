"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{isNumber,merge}=U;function toFixed(e,t){return parseFloat(e.toFixed(t))}class RSIIndicator extends SMAIndicator{getValues(e,t){const i=t.period,r=e.xData,s=e.yData,a=s?s.length:0,o=t.decimals,d=[],n=[],c=[];let x=0,l=0,m=t.index,p=1,u,S,g,I,F,f;if(!(r.length<i)){for(f=isNumber(s[0])?s:(m=Math.min(m,s[0].length-1),s.map(e=>e[m]));p<i;)0<(S=toFixed(f[p]-f[p-1],o))?x+=S:l+=Math.abs(S),p++;for(g=toFixed(x/(i-1),o),I=toFixed(l/(i-1),o),F=p;F<a;F++)S=toFixed(f[F]-f[F-1],o),l=0<S?(x=S,0):(x=0,Math.abs(S)),g=toFixed((g*(i-1)+x)/i,o),I=toFixed((I*(i-1)+l)/i,o),u=0===I?100:0===g?0:toFixed(100-100/(1+g/I),o),d.push([r[F],u]),n.push(r[F]),c.push(u);return{values:d,xData:n,yData:c}}}}RSIIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{decimals:4,index:3}}),SeriesRegistry.registerSeriesType("rsi",RSIIndicator);export default RSIIndicator;