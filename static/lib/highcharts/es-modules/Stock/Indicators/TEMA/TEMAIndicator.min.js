"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const EMAIndicator=SeriesRegistry.seriesTypes["ema"];import U from"../../../Core/Utilities.js";const{correctFloat,isArray,merge}=U;class TEMAIndicator extends EMAIndicator{getEMA(e,t,l,r,s,i){return super.calculateEma(i||[],e,void 0===s?1:s,this.EMApercent,t,void 0===r?-1:r,l)}getTemaPoint(e,t,l,r){return[e[r-3],correctFloat(3*l.level1-3*l.level2+l.level3)]}getValues(e,t){const l=t.period,r=2*l,s=3*l,i=e.xData,a=e.yData,o=a?a.length:0,v=[],n=[],c=[],p=[],u=[],d={};let g=-1,A=0,E=0,h,M,m,y;if(this.EMApercent=2/(l+1),!(o<3*l-2)){for(isArray(a[0])&&(g=t.index||0),A=super.accumulatePeriodPoints(l,g,a),E=A/l,A=0,m=l;m<o+3;m++)m<o+1&&(d.level1=this.getEMA(a,h,E,g,m)[1],p.push(d.level1)),h=d.level1,m<r?A+=d.level1:(m===r&&(E=A/l,A=0),d.level1=p[m-l-1],d.level2=this.getEMA([d.level1],M,E)[1],u.push(d.level2),M=d.level2,m<s?A+=d.level2:(m===s&&(E=A/l),m===o+1&&(d.level1=p[m-l-1],d.level2=this.getEMA([d.level1],M,E)[1],u.push(d.level2)),d.level1=p[m-l-2],d.level2=u[m-2*l-1],d.level3=this.getEMA([d.level2],d.prevLevel3,E)[1],(y=this.getTemaPoint(i,s,d,m))&&(v.push(y),n.push(y[0]),c.push(y[1])),d.prevLevel3=d.level3));return{values:v,xData:n,yData:c}}}}TEMAIndicator.defaultOptions=merge(EMAIndicator.defaultOptions),SeriesRegistry.registerSeriesType("tema",TEMAIndicator);export default TEMAIndicator;