"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{correctFloat,defined,extend,isArray,merge}=U;class DisparityIndexIndicator extends SMAIndicator{init(){var e=arguments,a=this,r=e[1].params,r=r&&r.average?r.average:void 0;a.averageIndicator=SeriesRegistry.seriesTypes[r]||SMAIndicator,a.averageIndicator.prototype.init.apply(a,e)}calculateDisparityIndex(e,a){return correctFloat(e-a)/a*100}getValues(e,a){const r=a.index,t=e.xData,i=e.yData,s=i?i.length:0,n=[],o=[],d=[],p=this.averageIndicator,y=isArray(i[0]),c=p.prototype.getValues(e,a),g=c.yData,l=t.indexOf(c.xData[0]);if(g&&0!==g.length&&defined(r)&&!(i.length<=l)){for(let e=l;e<s;e++){var x=this.calculateDisparityIndex(y?i[e][r]:i[e],g[e-l]);n.push([t[e],x]),o.push(t[e]),d.push(x)}return{values:n,xData:o,yData:d}}}}DisparityIndexIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{average:"sma",index:3},marker:{enabled:!1},dataGrouping:{approximation:"averages"}}),extend(DisparityIndexIndicator.prototype,{nameBase:"Disparity Index",nameComponents:["period","average"]}),SeriesRegistry.registerSeriesType("disparityindex",DisparityIndexIndicator);export default DisparityIndexIndicator;