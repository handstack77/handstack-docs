"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{isNumber,merge}=U;class CMOIndicator extends SMAIndicator{getValues(e,t){const i=t.period,a=e.xData,o=e.yData,n=o?o.length:0,p=[],d=[],u=[];let c,l=t.index,m;if(!(a.length<i)){m=isNumber(o[0])?o:(l=Math.min(l,o[0].length-1),o.map(e=>e[l]));let e,t=0,s=0,r;for(let e=i;0<e;e--)m[e]>m[e-1]?t+=m[e]-m[e-1]:m[e]<m[e-1]&&(s+=m[e-1]-m[e]);for(r=0<t+s?100*(t-s)/(t+s):0,d.push(a[i]),u.push(r),p.push([a[i],r]),c=i+1;c<n;c++)e=Math.abs(m[c-i-1]-m[c-i]),m[c]>m[c-1]?t+=m[c]-m[c-1]:m[c]<m[c-1]&&(s+=m[c-1]-m[c]),m[c-i]>m[c-i-1]?t-=e:s-=e,r=0<t+s?100*(t-s)/(t+s):0,d.push(a[c]),u.push(r),p.push([a[c],r]);return{values:p,xData:d,yData:u}}}}CMOIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{period:20,index:3}}),SeriesRegistry.registerSeriesType("cmo",CMOIndicator);export default CMOIndicator;