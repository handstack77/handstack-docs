"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{isArray,merge,extend}=U;function populateAverage(e,t,r,s,i){let a,o;return o=i<0?(a=t[r-s])?(t[r]-a)/a*100:null:(a=t[r-s][i])?(t[r][i]-a)/a*100:null,[e[r],o]}class ROCIndicator extends SMAIndicator{getValues(e,t){const r=t.period,s=e.xData,i=e.yData,a=i?i.length:0,o=[],n=[],p=[];let d,l=-1,u;if(!(s.length<=r)){for(isArray(i[0])&&(l=t.index),d=r;d<a;d++)u=populateAverage(s,i,d,r,l),o.push(u),n.push(u[0]),p.push(u[1]);return{values:o,xData:n,yData:p}}}}ROCIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:3,period:9}}),extend(ROCIndicator.prototype,{nameBase:"Rate of Change"}),SeriesRegistry.registerSeriesType("roc",ROCIndicator);export default ROCIndicator;