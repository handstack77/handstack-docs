"use strict";class DataCursor{constructor(t={}){this.emittingRegister=[],this.listenerMap={},this.stateMap=t}addListener(t,s,e){const r=this.listenerMap[t]=this.listenerMap[t]||{},i=r[s]=r[s]||[];return i.push(e),this}buildEmittingTag(t){return("position"===t.cursor.type?[t.table.id,t.cursor.column,t.cursor.row,t.cursor.state,t.cursor.type]:[t.table.id,t.cursor.columns,t.cursor.firstRow,t.cursor.lastRow,t.cursor.state,t.cursor.type]).join("\0")}emitCursor(t,s,e,r){const i=t.id,o=s.state,n=this.listenerMap[i]&&this.listenerMap[i][o];if(n){const a=this.stateMap[i]=this.stateMap[i]??{},u=a[s.state]||[],l=(r&&(u.length||(a[s.state]=u),-1===DataCursor.getIndex(s,u)&&u.push(s)),{cursor:s,cursors:u,table:t}),c=(e&&(l.event=e),this.emittingRegister),p=this.buildEmittingTag(l);if(0<=c.indexOf(p))return this;try{this.emittingRegister.push(p);for(let t=0,s=n.length;t<s;++t)n[t].call(this,l)}finally{r=this.emittingRegister.indexOf(p);0<=r&&this.emittingRegister.splice(r,1)}}return this}remitCursor(t,s){const e=this.stateMap[t]&&this.stateMap[t][s.state];return e&&0<=(t=DataCursor.getIndex(s,e))&&e.splice(t,1),this}removeListener(t,s,e){const r=this.listenerMap[t]&&this.listenerMap[t][s];return r&&0<=(t=r.indexOf(e))&&r.splice(t,1),this}}DataCursor.version="1.0.0",function(t){function i(t,s){if("range"===t.type)return t;const e={type:"range",firstRow:t.row??(s&&s.firstRow)??0,lastRow:t.row??(s&&s.lastRow)??Number.MAX_VALUE,state:t.state};return void 0!==t.column&&(e.columns=[t.column]),e}t.getIndex=function(r,i){if("position"===r.type){for(let t,s=0,e=i.length;s<e;++s)if("position"===(t=i[s]).type&&t.state===r.state&&t.column===r.column&&t.row===r.row)return s}else{var o=JSON.stringify(r.columns);for(let t,s=0,e=i.length;s<e;++s)if("range"===(t=i[s]).type&&t.state===r.state&&t.firstRow===r.firstRow&&t.lastRow===r.lastRow&&JSON.stringify(t.columns)===o)return s}return-1},t.isEqual=function(t,s){return"position"===t.type&&"position"===s.type?t.column===s.column&&t.row===s.row&&t.state===s.state:"range"===t.type&&"range"===s.type&&(t.firstRow===s.firstRow&&t.lastRow===s.lastRow&&JSON.stringify(t.columns)===JSON.stringify(s.columns))},t.isInRange=function(t,s){"position"===s.type&&(s=i(s));const e=(t="position"===t.type?i(t,s):t).columns,r=s.columns;return t.firstRow>=s.firstRow&&t.lastRow<=s.lastRow&&(!e||!r||e.every(t=>0<=r.indexOf(t)))},t.toPositions=function(s){if("position"===s.type)return[s];var r=s.columns||[];const i=[];var o=s.state;for(let e=s.firstRow,t=s.lastRow;e<t;++e)if(r.length)for(let t=0,s=r.length;t<s;++t)i.push({type:"position",column:r[t],row:e,state:o});else i.push({type:"position",row:e,state:o});return i},t.toRange=i}(DataCursor=DataCursor||{});export default DataCursor;