"use strict";import U from"../Core/Utilities.js";const{extend,isNumber,pick}=U;function getListOfParents(e){const i=[],n=e.reduce((e,t)=>{var{parent:n="",id:r}=t;return void 0===e[n]&&(e[n]=[]),e[n].push(t),r&&i.push(r),e},{});return Object.keys(n).forEach(e=>{var t;""!==e&&-1===i.indexOf(e)&&(t=n[e].map(function(e){const{...t}=e;return t}),n[""].push(...t),delete n[e])}),n}function getNode(r,e,i,t,s,o){const n=o&&o.after,d=o&&o.before,a={data:t,depth:i-1,id:r,level:i,parent:e||""};let u=0,c=0,f,p;"function"==typeof d&&d(a,o);e=(s[r]||[]).map(e=>{var t=getNode(e.id,r,i+1,e,s,o),n=e.start||NaN,e=!0===e.milestone?n:e.end||NaN;return f=!isNumber(f)||n<f?n:f,p=!isNumber(p)||e>p?e:p,u=u+1+t.descendants,c=Math.max(t.height+1,c),t});return t&&(t.start=pick(t.start,f),t.end=pick(t.end,p)),extend(a,{children:e,descendants:u,height:c}),"function"==typeof n&&n(a,o),a}function getTree(e,t){return getNode("",null,1,null,getListOfParents(e),t)}const Tree={getNode:getNode,getTree:getTree};export default Tree;