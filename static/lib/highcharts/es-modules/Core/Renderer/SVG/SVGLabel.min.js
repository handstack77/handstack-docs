import SVGElement from"./SVGElement.js";import U from"../../Utilities.js";const{defined,extend,isNumber,merge,pick,removeEvent}=U;class SVGLabel extends SVGElement{constructor(t,e,i,s,h,r,d,o,n,a){super(t,"g"),this.paddingLeftSetter=this.paddingSetter,this.paddingRightSetter=this.paddingSetter,this.doUpdate=!1,this.textStr=e,this.x=i,this.y=s,this.anchorX=r,this.anchorY=d,this.baseline=n,this.className=a,this.addClass("button"===a?"highcharts-no-tooltip":"highcharts-label"),a&&this.addClass("highcharts-"+a),this.text=t.text(void 0,0,0,o).attr({zIndex:1});let x;"string"==typeof h&&((x=/^url\((.*?)\)$/.test(h))||this.renderer.symbols[h])&&(this.symbolKey=h),this.bBox=SVGLabel.emptyBBox,this.padding=3,this.baselineOffset=0,this.needsBox=t.styledMode||x,this.deferredAttr={},this.alignFactor=0}alignSetter(t){t={left:0,center:.5,right:1}[t];t!==this.alignFactor&&(this.alignFactor=t,this.bBox&&isNumber(this.xSetting)&&this.attr({x:this.xSetting}))}anchorXSetter(t,e){this.anchorX=t,this.boxAttr(e,Math.round(t)-this.getCrispAdjust()-this.xSetting)}anchorYSetter(t,e){this.anchorY=t,this.boxAttr(e,t-this.ySetting)}boxAttr(t,e){this.box?this.box.attr(t,e):this.deferredAttr[t]=e}css(e){if(e){const i={};e=merge(e),SVGLabel.textProps.forEach(t=>{void 0!==e[t]&&(i[t]=e[t],delete e[t])}),this.text.css(i),"fontSize"in i||"fontWeight"in i?this.updateTextPadding():("width"in i||"textOverflow"in i)&&this.updateBoxSize()}return SVGElement.prototype.css.call(this,e)}destroy(){removeEvent(this.element,"mouseenter"),removeEvent(this.element,"mouseleave"),this.text&&this.text.destroy(),this.box&&(this.box=this.box.destroy()),SVGElement.prototype.destroy.call(this)}fillSetter(t,e){t&&(this.needsBox=!0),this.fill=t,this.boxAttr(e,t)}getBBox(t,e){this.textStr&&0===this.bBox.width&&0===this.bBox.height&&this.updateBoxSize();var{padding:i,height:s=0,translateX:h=0,translateY:r=0,width:d=0}=this,o=pick(this.paddingLeft,i),e=e??(this.rotation||0);let n={width:d,height:s,x:h+this.bBox.x-o,y:r+this.bBox.y-i+this.baselineOffset};return n=e?this.getRotatedBox(n,e):n}getCrispAdjust(){return(this.renderer.styledMode&&this.box?this.box.strokeWidth():this["stroke-width"]?parseInt(this["stroke-width"],10):0)%2/2}heightSetter(t){this.heightSetting=t,this.doUpdate=!0}afterSetters(){super.afterSetters(),this.doUpdate&&(this.updateBoxSize(),this.doUpdate=!1)}onAdd(){this.text.add(this),this.attr({text:pick(this.textStr,""),x:this.x||0,y:this.y||0}),this.box&&defined(this.anchorX)&&this.attr({anchorX:this.anchorX,anchorY:this.anchorY})}paddingSetter(t,e){isNumber(t)?t!==this[e]&&(this[e]=t,this.updateTextPadding()):this[e]=void 0}rSetter(t,e){this.boxAttr(e,t)}strokeSetter(t,e){this.stroke=t,this.boxAttr(e,t)}"stroke-widthSetter"(t,e){t&&(this.needsBox=!0),this["stroke-width"]=t,this.boxAttr(e,t)}"text-alignSetter"(t){this.textAlign=t}textSetter(t){void 0!==t&&this.text.attr({text:t}),this.updateTextPadding(),this.reAlign()}updateBoxSize(){const t=this.text,e={},i=this.padding,s=this.bBox=isNumber(this.widthSetting)&&isNumber(this.heightSetting)&&!this.textAlign||!defined(t.textStr)?SVGLabel.emptyBBox:t.getBBox(void 0,0);this.width=this.getPaddedWidth(),this.height=(this.heightSetting||s.height||0)+2*i;var h=this.renderer.fontMetrics(t);if(this.baselineOffset=i+Math.min((this.text.firstLineMetrics||h).b,s.height||1/0),this.heightSetting&&(this.baselineOffset+=(this.heightSetting-h.h)/2),this.needsBox&&!t.textPath){if(!this.box){const r=this.box=this.symbolKey?this.renderer.symbol(this.symbolKey):this.renderer.rect();r.addClass(("button"===this.className?"":"highcharts-label-box")+(this.className?" highcharts-"+this.className+"-box":"")),r.add(this)}h=this.getCrispAdjust(),e.x=h,e.y=(this.baseline?-this.baselineOffset:0)+h,e.width=Math.round(this.width),e.height=Math.round(this.height),this.box.attr(extend(e,this.deferredAttr)),this.deferredAttr={}}}updateTextPadding(){const e=this.text;if(!e.textPath){this.updateBoxSize();var i=this.baseline?0:this.baselineOffset;let t=pick(this.paddingLeft,this.padding);defined(this.widthSetting)&&this.bBox&&("center"===this.textAlign||"right"===this.textAlign)&&(t+={center:.5,right:1}[this.textAlign]*(this.widthSetting-this.bBox.width)),t===e.x&&i===e.y||(e.attr("x",t),e.hasBoxWidthChanged&&(this.bBox=e.getBBox(!0)),void 0!==i&&e.attr("y",i)),e.x=t,e.y=i}}widthSetter(t){this.widthSetting=isNumber(t)?t:void 0,this.doUpdate=!0}getPaddedWidth(){var t=this.padding,e=pick(this.paddingLeft,t),t=pick(this.paddingRight,t);return(this.widthSetting||this.bBox.width||0)+e+t}xSetter(t){this.x=t,this.alignFactor&&(t-=this.alignFactor*this.getPaddedWidth(),this["forceAnimate:x"]=!0),this.xSetting=Math.round(t),this.attr("translateX",this.xSetting)}ySetter(t){this.ySetting=this.y=Math.round(t),this.attr("translateY",this.ySetting)}}SVGLabel.emptyBBox={width:0,height:0,x:0,y:0},SVGLabel.textProps=["color","direction","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","textAlign","textDecoration","textOutline","textOverflow","whiteSpace","width"];export default SVGLabel;