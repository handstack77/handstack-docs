"use strict";import U from"../../Utilities.js";const{defined,isNumber,pick}=U;function arc(r,t,c,n,i){const a=[];if(i){var L=i.start||0,o=pick(i.r,c),n=pick(i.r,n||c),c=2e-4/(i.borderRadius?1:Math.max(o,1)),s=Math.abs((i.end||0)-L-2*Math.PI)<c,u=(i.end||0)-(s?c:0),l=i.innerR,s=pick(i.open,s),d=Math.cos(L),p=Math.sin(L),M=Math.cos(u),h=Math.sin(u),c=pick(i.longArc,u-L-Math.PI<c?0:1);let e=["A",o,n,0,c,pick(i.clockwise,1),r+o*M,t+n*h];e.params={start:L,end:u,cx:r,cy:t},a.push(["M",r+o*d,t+n*p],e),defined(l)&&((e=["A",l,l,0,c,defined(i.clockwise)?1-i.clockwise:0,r+l*d,t+l*p]).params={start:u,end:L,cx:r,cy:t},a.push(s?["M",r+l*M,t+l*h]:["L",r+l*M,t+l*h],e)),s||a.push(["Z"])}return a}function callout(e,r,t,c,n){var i,a=Math.min(n&&n.r||0,t,c),L=a+6,o=n&&n.anchorX,n=n&&n.anchorY||0;const s=roundedRect(e,r,t,c,{r:a});return isNumber(o)&&(o<t&&0<o&&n<c&&0<n||(t-L<e+o?r+L<n&&n<r+c-L?s.splice(3,1,["L",e+t,n-6],["L",e+t+6,n],["L",e+t,n+6],["L",e+t,r+c-a]):o<t?(i=n<r+L,s.splice(i?2:5,0,["L",o,n],["L",e+t-a,i?r:r+c])):s.splice(3,1,["L",e+t,c/2],["L",o,n],["L",e+t,c/2],["L",e+t,r+c-a]):e+o<L?r+L<n&&n<r+c-L?s.splice(7,1,["L",e,n+6],["L",e-6,n],["L",e,n-6],["L",e,r+a]):0<o?(i=n<r+L,s.splice(i?1:6,0,["L",o,n],["L",e+a,i?r:r+c])):s.splice(7,1,["L",e,c/2],["L",o,n],["L",e,c/2],["L",e,r+a]):c<n&&o<t-L?s.splice(5,1,["L",o+6,r+c],["L",o,r+c+6],["L",o-6,r+c],["L",e+a,r+c]):n<0&&L<o&&s.splice(1,1,["L",o-6,r],["L",o,r-6],["L",o+6,r],["L",t-a,r]))),s}function circle(e,r,t,c){return arc(e+t/2,r+c/2,t/2,c/2,{start:.5*Math.PI,end:2.5*Math.PI,open:!1})}function diamond(e,r,t,c){return[["M",e+t/2,r],["L",e+t,r+c/2],["L",e+t/2,r+c],["L",e,r+c/2],["Z"]]}function rect(e,r,t,c,n){return n&&n.r?roundedRect(e,r,t,c,n):[["M",e,r],["L",e+t,r],["L",e+t,r+c],["L",e,r+c],["Z"]]}function roundedRect(e,r,t,c,n){n=n?.r||0;return[["M",e+n,r],["L",e+t-n,r],["A",n,n,0,0,1,e+t,r+n],["L",e+t,r+c-n],["A",n,n,0,0,1,e+t-n,r+c],["L",e+n,r+c],["A",n,n,0,0,1,e,r+c-n],["L",e,r+n],["A",n,n,0,0,1,e+n,r],["Z"]]}function triangle(e,r,t,c){return[["M",e+t/2,r],["L",e+t,r+c],["L",e,r+c],["Z"]]}function triangleDown(e,r,t,c){return[["M",e,r],["L",e+t,r],["L",e+t/2,r+c],["Z"]]}const Symbols={arc:arc,callout:callout,circle:circle,diamond:diamond,rect:rect,roundedRect:roundedRect,square:rect,triangle:triangle,"triangle-down":triangleDown};export default Symbols;