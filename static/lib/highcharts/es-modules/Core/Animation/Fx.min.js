"use strict";import Color from"../Color/Color.js";const color=Color["parse"];import H from"../Globals.js";const win=H["win"];import U from"../Utilities.js";const{isNumber,objectEach}=U;class Fx{constructor(t,e,s){this.pos=NaN,this.options=e,this.elem=t,this.prop=s}dSetter(){var t=this.paths,e=t&&t[0],s=t&&t[1],i=this.now||0;let o=[];if(1!==i&&e&&s)if(e.length===s.length&&i<1)for(let t=0;t<s.length;t++){var r=e[t],h=s[t];const p=[];for(let t=0;t<h.length;t++){var n=r[t],l=h[t];isNumber(n)&&isNumber(l)&&("A"!==h[0]||4!==t&&5!==t)?p[t]=n+i*(l-n):p[t]=l}o.push(p)}else o=s;else o=this.toD||[];this.elem.attr("d",o,void 0,!0)}update(){const t=this.elem,e=this.prop,s=this.now,i=this.options.step;this[e+"Setter"]?this[e+"Setter"]():t.attr?t.element&&t.attr(e,s,null,!0):t.style[e]=s+this.unit,i&&i.call(t,s,this)}run(t,e,s){const i=this,o=i.options,r=function(t){return!r.stopped&&i.step(t)},h=win.requestAnimationFrame||function(t){setTimeout(t,13)},n=function(){for(let t=0;t<Fx.timers.length;t++)Fx.timers[t]()||Fx.timers.splice(t--,1);Fx.timers.length&&h(n)};t!==e||this.elem["forceAnimate:"+this.prop]?(this.startTime=+new Date,this.start=t,this.end=e,this.unit=s,this.now=this.start,this.pos=0,r.elem=this.elem,r.prop=this.prop,r()&&1===Fx.timers.push(r)&&h(n)):(delete o.curAnim[this.prop],o.complete&&0===Object.keys(o.curAnim).length&&o.complete.call(this.elem))}step(t){const e=+new Date,s=this.options,i=this.elem,o=s.complete,r=s.duration,h=s.curAnim;let n,l;return n=!(i.attr&&!i.element)&&(t||e>=r+this.startTime?(this.now=this.end,this.pos=1,this.update(),h[this.prop]=!0,l=!0,objectEach(h,function(t){!0!==t&&(l=!1)}),l&&o&&o.call(i),!1):(this.pos=s.easing((e-this.startTime)/r),this.now=this.start+(this.end-this.start)*this.pos,this.update(),!0))}initPath(t,e,s){const i=t.startX,o=t.endX,r=s.slice(),h=t.isArea,n=h?2:1,l=e&&s.length>e.length&&s.hasStackedCliffs;let p,a,c,m,u=e&&e.slice();if(!u||l)return[r,r];function f(t,e){for(;t.length<a;){var s=t[0],i=e[a-t.length];i&&"M"===s[0]&&("C"===i[0]?t[0]=["C",s[1],s[2],s[1],s[2],s[1],s[2]]:t[0]=["L",s[1],s[2]]),t.unshift(s),h&&(i=t.pop(),t.push(t[t.length-1],i))}}function g(t){for(;t.length<a;){const s=t[Math.floor(t.length/n)-1].slice();var e;"C"===s[0]&&(s[1]=s[5],s[2]=s[6]),h?(e=t[Math.floor(t.length/n)].slice(),t.splice(t.length/2,0,s,e)):t.push(s)}}if(i&&o&&o.length){for(c=0;c<i.length;c++){if(i[c]===o[0]){p=c;break}if(i[0]===o[o.length-i.length+c]){p=c,m=!0;break}if(i[i.length-1]===o[o.length-i.length+c]){p=i.length-c;break}}void 0===p&&(u=[])}return u.length&&isNumber(p)&&(a=r.length+p*n,m?(f(u,r),g(r)):(f(r,u),g(u))),[u,r]}fillSetter(){Fx.prototype.strokeSetter.apply(this,arguments)}strokeSetter(){this.elem.attr(this.prop,color(this.start).tweenTo(color(this.end),this.pos),void 0,!0)}}Fx.timers=[];export default Fx;