"use strict";import Chart from"./Chart.js";import D from"../Defaults.js";const getOptions=D["getOptions"];import SVGRenderer from"../Renderer/SVG/SVGRenderer.js";import U from"../Utilities.js";const{isNumber,merge,pick}=U;import"../../Maps/MapSymbols.js";class MapChart extends Chart{init(e,t){var r=getOptions().credits,r=merge({chart:{panning:{enabled:!0,type:"xy"},type:"map"},credits:{mapText:pick(r.mapText,' Â© <a href="{geojson.copyrightUrl}">{geojson.copyrightShort}</a>'),mapTextFull:pick(r.mapTextFull,"{geojson.copyright}")},mapView:{},tooltip:{followTouchMove:!1}},e);super.init(r,t)}mapZoom(e,t,r,p,i){this.mapView&&(isNumber(e)&&(e=Math.log(e)/Math.log(.5)),this.mapView.zoomBy(e,isNumber(t)&&isNumber(r)?this.mapView.projection.inverse([t,r]):void 0,isNumber(p)&&isNumber(i)?[p,i]:void 0))}update(e){e.chart&&"map"in e.chart&&this.mapView?.recommendMapView(this,[e.chart.map,...(this.options.series||[]).map(e=>e.mapData)],!0),super.update.apply(this,arguments)}}!function(p){p.maps={},p.mapChart=function(e,t,r){return new p(e,t,r)},p.splitPath=function(e){let t;if("string"==typeof e){const r=(e=e.replace(/([A-Z])/gi," $1 ").replace(/^\s*/,"").replace(/\s*$/,"")).split(/[ ,;]+/);t=r.map(e=>/[A-Z]/i.test(e)?e:parseFloat(e))}else t=e;return SVGRenderer.prototype.pathToSegments(t)}}(MapChart=MapChart||{});export default MapChart;