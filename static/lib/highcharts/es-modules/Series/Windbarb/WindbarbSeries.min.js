"use strict";import A from"../../Core/Animation/AnimationUtilities.js";const animObject=A["animObject"];import ApproximationRegistry from"../../Extensions/DataGrouping/ApproximationRegistry.js";import H from"../../Core/Globals.js";import OnSeriesComposition from"../OnSeriesComposition.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const ColumnSeries=SeriesRegistry.seriesTypes["column"];import U from"../../Core/Utilities.js";const{extend,merge,pick}=U;import WindbarbPoint from"./WindbarbPoint.js";import WindbarbSeriesDefaults from"./WindbarbSeriesDefaults.js";function registerApproximation(){ApproximationRegistry.windbarb||(ApproximationRegistry.windbarb=(e,i)=>{let o=0,s=0;for(let t=0,r=e.length;t<r;t++)o+=e[t]*Math.cos(i[t]*H.deg2rad),s+=e[t]*Math.sin(i[t]*H.deg2rad);return[e.reduce((t,r)=>t+r,0)/e.length,Math.atan2(s,o)/H.deg2rad]})}class WindbarbSeries extends ColumnSeries{init(t,r){super.init(t,r)}pointAttribs(t,r){var e=this.options;let i=t.color||this.color,o=this.options.lineWidth;return r&&(i=e.states[r].color||i,o=(e.states[r].lineWidth||o)+(e.states[r].lineWidthPlus||0)),{stroke:i,"stroke-width":o}}windArrow(t){var r=t.beaufortLevel,e=this.options.vectorLength/20;let i=1.943844*t.value,o,s=-10;if(t.isNull)return[];if(0===r)return this.chart.renderer.symbols.circle(-10*e,-10*e,20*e,20*e);const n=[["M",0,7*e],["L",-1.5*e,7*e],["L",0,10*e],["L",1.5*e,7*e],["L",0,7*e],["L",0,-10*e]];if(0<(o=(i-i%50)/50))for(;o--;)n.push(-10===s?["L",0,s*e]:["M",0,s*e],["L",5*e,s*e+2],["L",0,s*e+4]),i-=50,s+=7;if(0<(o=(i-i%10)/10))for(;o--;)n.push(-10===s?["L",0,s*e]:["M",0,s*e],["L",7*e,s*e]),i-=10,s+=3;if(0<(o=(i-i%5)/5))for(;o--;)n.push(-10===s?["L",0,s*e]:["M",0,s*e],["L",4*e,s*e]),i-=5,s+=3;return n}drawPoints(){const t=this.chart,r=this.yAxis,e=t.inverted,i=this.options.vectorLength/2;for(const n of this.points){var o=n.plotX,s=n.plotY;!1===this.options.clip||t.isInsidePlot(o,0)?(n.graphic||(n.graphic=this.chart.renderer.path().add(this.markerGroup).addClass("highcharts-point highcharts-color-"+pick(n.colorIndex,n.series.colorIndex))),n.graphic.attr({d:this.windArrow(n),translateX:o+this.options.xOffset,translateY:s+this.options.yOffset,rotation:n.direction}),this.chart.styledMode||n.graphic.attr(this.pointAttribs(n))):n.graphic&&(n.graphic=n.graphic.destroy()),n.tooltipPos=[o+this.options.xOffset+(e&&!this.onSeries?i:0),s+this.options.yOffset-(e?0:i+r.pos-t.plotTop)]}}animate(t){t?this.markerGroup.attr({opacity:.01}):this.markerGroup.animate({opacity:1},animObject(this.options.animation))}markerAttribs(){return{}}getExtremes(){return{}}shouldShowTooltip(t,r,e={}){return e.ignoreX=this.chart.inverted,e.ignoreY=!e.ignoreX,super.shouldShowTooltip(t,r,e)}}WindbarbSeries.defaultOptions=merge(ColumnSeries.defaultOptions,WindbarbSeriesDefaults),OnSeriesComposition.compose(WindbarbSeries),extend(WindbarbSeries.prototype,{beaufortFloor:[0,.3,1.6,3.4,5.5,8,10.8,13.9,17.2,20.8,24.5,28.5,32.7],beaufortName:["Calm","Light air","Light breeze","Gentle breeze","Moderate breeze","Fresh breeze","Strong breeze","Near gale","Gale","Strong gale","Storm","Violent storm","Hurricane"],invertible:!1,parallelArrays:["x","value","direction"],pointArrayMap:["value","direction"],pointClass:WindbarbPoint,trackerGroups:["markerGroup"],translate:function(){var r=this.beaufortFloor,e=this.beaufortName;OnSeriesComposition.translate.call(this);for(const i of this.points){let t=0;for(;t<r.length&&!(r[t]>i.value);t++);i.beaufortLevel=t-1,i.beaufort=e[t-1]}}}),SeriesRegistry.registerSeriesType("windbarb",WindbarbSeries),registerApproximation();export default WindbarbSeries;