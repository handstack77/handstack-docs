"use strict";import BubbleLegendComposition from"./BubbleLegendComposition.js";import BubblePoint from"./BubblePoint.js";import Color from"../../Core/Color/Color.js";const color=Color["parse"];import H from"../../Core/Globals.js";const{composed,noop}=H;import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{column:{prototype:columnProto},scatter:ScatterSeries}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{addEvent,arrayMax,arrayMin,clamp,extend,isNumber,merge,pick,pushUnique}=U;function onAxisFoundExtremes(){const t=this.len,{coll:e,isXAxis:s,min:a}=this,o=s?"xData":"yData",n=(this.max||0)-(a||0);let l=0,h=t,m=t/n,p;"xAxis"!==e&&"yAxis"!==e||(this.series.forEach(e=>{if(e.bubblePadding&&e.reserveSpace()){this.allowZoomOutside=!0,p=!0;var i,r=e[o];if(s&&((e.onPoint||e).getRadii(0,0,e),e.onPoint&&(e.radii=e.onPoint.radii)),0<n){let t=r.length;for(;t--;)isNumber(r[t])&&this.dataMin<=r[t]&&r[t]<=this.max&&(i=e.radii&&e.radii[t]||0,l=Math.min((r[t]-a)*m-i,l),h=Math.max((r[t]-a)*m+i,h))}}}),p&&0<n&&!this.logarithmic&&(h-=t,m*=(t+Math.max(0,l)-Math.min(h,t))/t,[["min","userMin",l],["max","userMax",h]].forEach(t=>{void 0===pick(this.options[t[0]],this[t[1]])&&(this[t[0]]+=t[2]/m)})))}class BubbleSeries extends ScatterSeries{static compose(t,e,i){BubbleLegendComposition.compose(e,i),pushUnique(composed,"Series.Bubble")&&addEvent(t,"foundExtremes",onAxisFoundExtremes)}animate(t){!t&&this.points.length<this.options.animationLimit&&this.points.forEach(function(t){const{graphic:e,plotX:i=0,plotY:r=0}=t;e&&e.width&&(this.hasRendered||e.attr({x:i,y:r,width:1,height:1}),e.animate(this.markerAttribs(t),this.options.animation))},this)}getRadii(){const t=this.zData,e=this.yData,i=[];let r,s,a,o=this.chart.bubbleZExtremes;var{minPxSize:n,maxPxSize:l}=this.getPxExtremes();if(!o){let e=Number.MAX_VALUE,i=-Number.MAX_VALUE,r;this.chart.series.forEach(t=>{t.bubblePadding&&t.reserveSpace()&&((t=(t.onPoint||t).getZExtremes())&&(e=Math.min(pick(e,t.zMin),t.zMin),i=Math.max(pick(i,t.zMax),t.zMax),r=!0))}),r?(o={zMin:e,zMax:i},this.chart.bubbleZExtremes=o):o={zMin:0,zMax:0}}for(s=0,r=t.length;s<r;s++)a=t[s],i.push(this.getRadius(o.zMin,o.zMax,n,l,a,e&&e[s]));this.radii=i}getRadius(t,e,i,r,s,a){var o=this.options,n="width"!==o.sizeBy,l=o.zThreshold;let h=e-t,m=.5;if(null===a||null===s)return null;if(isNumber(s)){if(o.sizeByAbsoluteValue&&(s=Math.abs(s-l),e=h=Math.max(e-l,Math.abs(t-l)),t=0),s<t)return i/2-1;0<h&&(m=(s-t)/h)}return n&&0<=m&&(m=Math.sqrt(m)),Math.ceil(i+m*(r-i))/2}hasData(){return!!this.processedXData.length}markerAttribs(t,e){var e=super.markerAttribs(t,e),{height:i=0,width:r=0}=e;return this.chart.inverted?extend(e,{x:(t.plotX||0)-r/2,y:(t.plotY||0)-i/2}):e}pointAttribs(t,e){const i=this.options.marker,r=i.fillOpacity,s=Series.prototype.pointAttribs.call(this,t,e);return 1!==r&&(s.fill=color(s.fill).setOpacity(r).get("rgba")),s}translate(){super.translate.call(this),this.getRadii(),this.translateBubble()}translateBubble(){var{data:t,options:e,radii:i}=this,r=this.getPxExtremes()["minPxSize"];let s=t.length;for(;s--;){const a=t[s],o=i?i[s]:0;"z"===this.zoneAxis&&(a.negative=(a.z||0)<(e.zThreshold||0)),isNumber(o)&&r/2<=o?(a.marker=extend(a.marker,{radius:o,width:2*o,height:2*o}),a.dlBox={x:a.plotX-o,y:a.plotY-o,width:2*o,height:2*o}):(a.shapeArgs=a.plotY=a.dlBox=void 0,a.isInside=!1)}}getPxExtremes(){const i=Math.min(this.chart.plotWidth,this.chart.plotHeight);var t=t=>{let e;return"string"==typeof t&&(e=/%$/.test(t),t=parseInt(t,10)),e?i*t/100:t},e=t(pick(this.options.minSize,8));return{minPxSize:e,maxPxSize:Math.max(t(pick(this.options.maxSize,"20%")),e)}}getZExtremes(){var t=this.options,e=(this.zData||[]).filter(isNumber);if(e.length){var i=pick(t.zMin,clamp(arrayMin(e),!1===t.displayNegative?t.zThreshold||0:-Number.MAX_VALUE,Number.MAX_VALUE)),t=pick(t.zMax,arrayMax(e));if(isNumber(i)&&isNumber(t))return{zMin:i,zMax:t}}}}BubbleSeries.defaultOptions=merge(ScatterSeries.defaultOptions,{dataLabels:{formatter:function(){const t=this.series.chart["numberFormatter"];var e=this.point["z"];return isNumber(e)?t(e,-1):""},inside:!0,verticalAlign:"middle"},animationLimit:250,marker:{lineColor:null,lineWidth:1,fillOpacity:.5,radius:null,states:{hover:{radiusPlus:0}},symbol:"circle"},minSize:8,maxSize:"20%",softThreshold:!1,states:{hover:{halo:{size:5}}},tooltip:{pointFormat:"({point.x}, {point.y}), Size: {point.z}"},turboThreshold:0,zThreshold:0,zoneAxis:"z"}),extend(BubbleSeries.prototype,{alignDataLabel:columnProto.alignDataLabel,applyZones:noop,bubblePadding:!0,isBubble:!0,pointArrayMap:["y","z"],pointClass:BubblePoint,parallelArrays:["x","y","z"],trackerGroups:["group","dataLabelsGroup"],specialGroup:"group",zoneAxis:"z"}),addEvent(BubbleSeries,"updatedData",t=>{delete t.target.chart.bubbleZExtremes}),addEvent(BubbleSeries,"remove",t=>{delete t.target.chart.bubbleZExtremes}),SeriesRegistry.registerSeriesType("bubble",BubbleSeries);export default BubbleSeries;