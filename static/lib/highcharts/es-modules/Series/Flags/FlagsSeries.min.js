"use strict";import FlagsPoint from"./FlagsPoint.js";import FlagsSeriesDefaults from"./FlagsSeriesDefaults.js";import FlagsSymbols from"./FlagsSymbols.js";import H from"../../Core/Globals.js";const noop=H["noop"];import OnSeriesComposition from"../OnSeriesComposition.js";import R from"../../Core/Renderer/RendererUtilities.js";const distribute=R["distribute"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{column:ColumnSeries}}=SeriesRegistry;import SVGElement from"../../Core/Renderer/SVG/SVGElement.js";import U from"../../Core/Utilities.js";const{addEvent,defined,extend,isNumber,merge,objectEach,wrap}=U;class FlagsSeries extends ColumnSeries{animate(e){e&&this.setClip()}drawPoints(){const e=this,i=e.points,t=e.chart,s=t.renderer,o=t.inverted,r=e.options,a=r.y,l=e.yAxis,n={},p=[],d=isNumber(r.borderRadius)?r.borderRadius:0;let h,c,m,g,u,f,S,y,C,w,v;for(g=i.length;g--;)u=i[g],w=(o?u.plotY:u.plotX)>e.xAxis.len,h=u.plotX,S=u.stackIndex,m=u.options.shape||r.shape,void 0!==(c=u.plotY)&&(c=u.plotY+a-(void 0!==S&&S*r.stackDistance)),u.anchorX=S?void 0:u.plotX,y=S?void 0:u.plotY,v="flag"!==m,f=u.graphic,void 0!==c&&0<=h&&!w?((f=f&&u.hasNewShapeType()?f.destroy():f)||(f=u.graphic=s.label("",0,void 0,m,void 0,void 0,r.useHTML).addClass("highcharts-point").add(e.markerGroup),u.graphic.div&&(u.graphic.div.point=u),f.isNew=!0),f.attr({align:v?"center":"left",width:r.width,height:r.height,"text-align":r.textAlign,r:d}),t.styledMode||f.attr(e.pointAttribs(u)).css(merge(r.style,u.style)).shadow(r.shadow),0<h&&(h-=f.strokeWidth()%2),C={y:c,anchorY:y},r.allowOverlapX&&(C.x=h,C.anchorX=u.anchorX),f.attr({text:u.options.title??r.title??"A"})[f.isNew?"attr":"animate"](C),r.allowOverlapX||(n[u.plotX]?n[u.plotX].size=Math.max(n[u.plotX].size,f.width||0):n[u.plotX]={align:v?.5:0,size:f.width||0,target:h,anchorX:h}),u.tooltipPos=[h,c+l.pos-t.plotTop]):f&&(u.graphic=f.destroy());if(!r.allowOverlapX){let t=100;objectEach(n,function(e){e.plotX=e.anchorX,p.push(e),t=Math.max(e.size,t)}),distribute(p,(o?l:this.xAxis).len,t);for(const u of i){const h=u.plotX,f=u.graphic,b=f&&n[h];b&&f&&(defined(b.pos)?f[f.isNew?"attr":"animate"]({x:b.pos+(b.align||0)*b.size,anchorX:u.anchorX}).show().isNew=!1:f.hide().isNew=!0)}}r.useHTML&&e.markerGroup&&wrap(e.markerGroup,"on",function(e){return SVGElement.prototype.on.apply(e.apply(this,[].slice.call(arguments,1)),[].slice.call(arguments,1))})}drawTracker(){const t=this.points;super.drawTracker();for(const i of t){const s=i.graphic;s&&(i.unbindMouseOver&&i.unbindMouseOver(),i.unbindMouseOver=addEvent(s.element,"mouseover",function(){0<i.stackIndex&&!i.raised&&(i._y=s.y,s.attr({y:i._y-8}),i.raised=!0);for(const e of t)e!==i&&e.raised&&e.graphic&&(e.graphic.attr({y:e._y}),e.raised=!1)}))}}pointAttribs(e,t){var i=this.options,s=e&&e.color||this.color;let o=i.lineColor,r=e&&e.lineWidth,a=e&&e.fillColor||i.fillColor;return t&&(a=i.states[t].fillColor,o=i.states[t].lineColor,r=i.states[t].lineWidth),{fill:a||s,stroke:o||s,"stroke-width":r||i.lineWidth||0}}setClip(){Series.prototype.setClip.apply(this,arguments),!1!==this.options.clip&&this.sharedClipKey&&this.markerGroup&&this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey])}}FlagsSeries.compose=FlagsSymbols.compose,FlagsSeries.defaultOptions=merge(ColumnSeries.defaultOptions,FlagsSeriesDefaults),OnSeriesComposition.compose(FlagsSeries),extend(FlagsSeries.prototype,{allowDG:!1,forceCrop:!0,invertible:!1,noSharedTooltip:!0,pointClass:FlagsPoint,sorted:!1,takeOrdinalPosition:!1,trackerGroups:["markerGroup"],buildKDTree:noop,init:Series.prototype.init}),SeriesRegistry.registerSeriesType("flags",FlagsSeries);export default FlagsSeries;