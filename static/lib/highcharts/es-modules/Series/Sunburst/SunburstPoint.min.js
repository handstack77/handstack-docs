"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:{prototype:{pointClass:Point}},seriesTypes:{treemap:{prototype:{pointClass:TreemapPoint}}}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{correctFloat,extend,pInt}=U;class SunburstPoint extends TreemapPoint{getDataLabelPath(t){const e=this.series.chart.renderer,a=this.shapeExisting,s=a.r+pInt(t.options?.distance||0);let r=a.start,o=a.end;t=r+(o-r)/2;let i=t<0&&t>-Math.PI||t>Math.PI,n;return r===-Math.PI/2&&correctFloat(o)===correctFloat(1.5*Math.PI)&&(r=-Math.PI+Math.PI/360,o=-Math.PI/360,i=!0),o-r>Math.PI&&(i=!1,n=!0,o-r>2*Math.PI-.01&&(r+=.01,o-=.01)),this.dataLabelPath&&(this.dataLabelPath=this.dataLabelPath.destroy()),this.dataLabelPath=e.arc({open:!0,longArc:n?1:0}).attr({start:i?r:o,end:i?o:r,clockwise:+i,x:a.x,y:a.y,r:(s+a.innerR)/2}).add(e.defs),this.dataLabelPath}isValid(){return!0}}extend(SunburstPoint.prototype,{getClassName:Point.prototype.getClassName,haloPath:Point.prototype.haloPath,setState:Point.prototype.setState});export default SunburstPoint;