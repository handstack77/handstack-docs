"use strict";import DerivedComposition from"../DerivedComposition.js";import ParetoSeriesDefaults from"./ParetoSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const LineSeries=SeriesRegistry.seriesTypes["line"];import U from"../../Core/Utilities.js";const{correctFloat,merge,extend}=U;class ParetoSeries extends LineSeries{sumPointsPercents(e,s,r,t){const i=[];let o=0,a=0,n=0,S;for(const m of e)null!==m&&(t?a+=m:(S=m/r*100,i.push([s[o],correctFloat(n+S)]),n+=S)),++o;return t?a:i}setDerivedData(){var e=this.baseSeries.xData,s=this.baseSeries.yData,r=this.sumPointsPercents(s,e,null,!0);this.setData(this.sumPointsPercents(s,e,r,!1),!1)}}ParetoSeries.defaultOptions=merge(LineSeries.defaultOptions,ParetoSeriesDefaults),extend(ParetoSeries.prototype,{hasDerivedData:DerivedComposition.hasDerivedData}),DerivedComposition.compose(ParetoSeries),SeriesRegistry.registerSeriesType("pareto",ParetoSeries);export default ParetoSeries;