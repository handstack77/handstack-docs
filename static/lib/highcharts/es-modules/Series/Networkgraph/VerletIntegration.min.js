"use strict";function attractive(t,e,o){var r=t.getMass(),i=-o.x*e*this.diffTemperature,o=-o.y*e*this.diffTemperature;t.fromNode.fixedPosition||(t.fromNode.plotX-=i*r.fromNode/t.fromNode.degree,t.fromNode.plotY-=o*r.fromNode/t.fromNode.degree),t.toNode.fixedPosition||(t.toNode.plotX+=i*r.toNode/t.toNode.degree,t.toNode.plotY+=o*r.toNode/t.toNode.degree)}function attractiveForceFunction(t,e){return(e-t)/t}function barycenter(){const t=this.options.gravitationalConstant||0,e=(this.barycenter.xFactor-(this.box.left+this.box.width)/2)*t,o=(this.barycenter.yFactor-(this.box.top+this.box.height)/2)*t;this.nodes.forEach(function(t){t.fixedPosition||(t.plotX-=e/t.mass/t.degree,t.plotY-=o/t.mass/t.degree)})}function getK(t){return Math.pow(t.box.width*t.box.height/t.nodes.length,.5)}function integrate(t,e){const o=-t.options.friction,r=t.options.maxSpeed,i=e.prevX,n=e.prevY,a=(e.plotX+e.dispX-i)*o,s=(e.plotY+e.dispY-n)*o,c=Math.abs,p=c(a)/(a||1),d=c(s)/(s||1),f=p*Math.min(r,Math.abs(a)),u=d*Math.min(r,Math.abs(s));e.prevX=e.plotX+e.dispX,e.prevY=e.plotY+e.dispY,e.plotX+=f,e.plotY+=u,e.temperature=t.vectorLength({x:f,y:u})}function repulsive(t,e,o){e=e*this.diffTemperature/t.mass/t.degree;t.fixedPosition||(t.plotX+=o.x*e,t.plotY+=o.y*e)}function repulsiveForceFunction(t,e){return(e-t)/t*(t<e?1:0)}const VerletIntegration={attractive:attractive,attractiveForceFunction:attractiveForceFunction,barycenter:barycenter,getK:getK,integrate:integrate,repulsive:repulsive,repulsiveForceFunction:repulsiveForceFunction};export default VerletIntegration;