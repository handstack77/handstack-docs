"use strict";import Series from"../../Core/Series/Series.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";const{defined,merge,isObject}=U;class LineSeries extends Series{drawGraph(){const o=this.options,l=(this.gappedPath||this.getGraphPath).call(this),h=this.chart.styledMode;[this,...this.zones].forEach((e,t)=>{let s,i=e.graph;var r=i?"animate":"attr",a=e.dashStyle||o.dashStyle;i?(i.endX=this.preventGraphAnimation?null:l.xMap,i.animate({d:l})):l.length&&(e.graph=i=this.chart.renderer.path(l).addClass("highcharts-graph"+(t?` highcharts-zone-graph-${t-1} `:" ")+(t&&e.className||"")).attr({zIndex:1}).add(this.group)),i&&!h&&(s={stroke:!t&&o.lineColor||e.color||this.color||"#cccccc","stroke-width":o.lineWidth||0,fill:this.fillGraph&&this.color||"none"},a?s.dashstyle=a:"square"!==o.linecap&&(s["stroke-linecap"]=s["stroke-linejoin"]="round"),i[r](s).shadow(t<2&&o.shadow&&merge({filterUnits:"userSpaceOnUse"},isObject(o.shadow)?o.shadow:{}))),i&&(i.startX=l.xMap,i.isArea=l.isArea)})}getGraphPath(l,h,n){const p=this,c=p.options,d=[],g=[];let f,u=c.step;var e=(l=l||p.points).reversed;return e&&l.reverse(),(u={right:1,center:2}[u]||u&&3)&&e&&(u=4-u),(l=this.getValidPoints(l,!1,!(c.connectNulls&&!h&&!n))).forEach(function(e,t){var s=e.plotX,i=e.plotY,r=l[t-1],a=e.isNull||"number"!=typeof i;let o;(e.leftCliff||r&&r.rightCliff)&&!n&&(f=!0),f=a&&!defined(h)&&0<t?!c.connectNulls:!(!a||h)||(0===t||f?o=[["M",e.plotX,e.plotY]]:p.getPointSpline?o=[p.getPointSpline(l,e,t)]:u?(o=1===u?[["L",r.plotX,i]]:2===u?[["L",(r.plotX+s)/2,r.plotY],["L",(r.plotX+s)/2,i]]:[["L",s,r.plotY]]).push(["L",s,i]):o=[["L",s,i]],g.push(e.x),u&&(g.push(e.x),2===u&&g.push(e.x)),d.push.apply(d,o),!1)}),d.xMap=g,p.graphPath=d}}LineSeries.defaultOptions=merge(Series.defaultOptions,{legendSymbol:"lineMarker"}),SeriesRegistry.registerSeriesType("line",LineSeries);export default LineSeries;