"use strict";import H from"../Core/Globals.js";const noop=H["noop"];import Series from"../Core/Series/Series.js";import U from"../Core/Utilities.js";const{addEvent,defined}=U;var DerivedComposition;!function(e){function i(){Series.prototype.init.apply(this,arguments),this.initialised=!1,this.baseSeries=null,this.eventRemovers=[],this.addEvents()}function t(){const e=this.chart,s=this.options.baseSeries,i=defined(s)&&(e.series[s]||e.get(s));this.baseSeries=i||null}function o(){this.eventRemovers.push(addEvent(this.chart,"afterLinkSeries",()=>{this.setBaseSeries(),this.baseSeries&&!this.initialised&&(this.setDerivedData(),this.addBaseSeriesEvents(),this.initialised=!0)}))}function r(){this.eventRemovers.push(addEvent(this.baseSeries,"updatedData",()=>{this.setDerivedData()}),addEvent(this.baseSeries,"destroy",()=>{this.baseSeries=null,this.initialised=!1}))}function n(){this.eventRemovers.forEach(e=>{e()}),Series.prototype.destroy.apply(this,arguments)}e.hasDerivedData=!0,e.setDerivedData=noop,e.compose=function(e){const s=e.prototype;return s.addBaseSeriesEvents=r,s.addEvents=o,s.destroy=n,s.init=i,s.setBaseSeries=t,e},e.init=i,e.setBaseSeries=t,e.addEvents=o,e.addBaseSeriesEvents=r,e.destroy=n}(DerivedComposition=DerivedComposition||{});export default DerivedComposition;