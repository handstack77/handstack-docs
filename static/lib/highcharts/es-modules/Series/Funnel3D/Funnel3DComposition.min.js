"use strict";import SVGElement3DFunnel from"./SVGElement3DFunnel.js";import H from"../../Core/Globals.js";const charts=H["charts"];import U from"../../Core/Utilities.js";const{error,extend,merge}=U;function compose(e){const r=e.prototype;r.funnel3d||(r.Element3D.types.funnel3d=SVGElement3DFunnel,extend(r,{funnel3d:rendererFunnel3d,funnel3dPath:rendererFunnel3dPath}))}function rendererFunnel3d(e){const r=this,t=r.element3d("funnel3d",e),n=r.styledMode,o={"stroke-width":1,stroke:"none"};t.upperGroup=r.g("funnel3d-upper-group").attr({zIndex:t.frontUpper.zIndex}).add(t);for(const d of[t.frontUpper,t.backUpper,t.rightUpper])n||d.attr(o),d.add(t.upperGroup);t.lowerGroup=r.g("funnel3d-lower-group").attr({zIndex:t.frontLower.zIndex}).add(t);for(const i of[t.frontLower,t.backLower,t.rightLower])n||i.attr(o),i.add(t.lowerGroup);return t.gradientForSides=e.gradientForSides,t}function rendererFunnel3dPath(e){this.getCylinderEnd||error("A required Highcharts module is missing: cylinder.js",!0,charts[this.chartIndex]);var r=this,t=charts[r.chartIndex],n=e.alphaCorrection=90-Math.abs(t.options.chart.options3d.alpha%180-90),o=this.cuboidPath.call(r,merge(e,{depth:e.width,width:(e.width+e.bottom.width)/2})),d=o.isTop,i=!o.isFront,l=!!e.middle,p=r.getCylinderEnd(t,merge(e,{x:e.x-e.width/2,z:e.z-e.width/2,alphaCorrection:n})),a=e.bottom.width,h=merge(e,{width:a,x:e.x-a/2,z:e.z-a/2,alphaCorrection:n}),s=r.getCylinderEnd(t,h,!0);let c=a,g=h,m=s,u=s,w;l&&(c=e.middle.width,g=merge(e,{y:e.y+e.middle.fraction*e.height,width:c,x:e.x-c/2,z:e.z-c/2}),m=r.getCylinderEnd(t,g,!1),u=r.getCylinderEnd(t,g,!1));const f={top:p,bottom:s,frontUpper:r.getCylinderFront(p,m),zIndexes:{group:o.zIndexes.group,top:0!==d?0:3,bottom:1!==d?0:3,frontUpper:i?2:1,backUpper:i?1:2,rightUpper:i?2:1}};return f.backUpper=r.getCylinderBack(p,m),w=Math.min(c,e.width)/Math.max(c,e.width)!=1,f.rightUpper=r.getCylinderFront(r.getCylinderEnd(t,merge(e,{x:e.x-e.width/2,z:e.z-e.width/2,alphaCorrection:w?-n:0}),!1),r.getCylinderEnd(t,merge(g,{alphaCorrection:w?-n:0}),!l)),l&&(w=Math.min(c,a)/Math.max(c,a)!=1,merge(!0,f,{frontLower:r.getCylinderFront(u,s),backLower:r.getCylinderBack(u,s),rightLower:r.getCylinderFront(r.getCylinderEnd(t,merge(h,{alphaCorrection:w?-n:0}),!0),r.getCylinderEnd(t,merge(g,{alphaCorrection:w?-n:0}),!1)),zIndexes:{frontLower:i?2:1,backLower:i?1:2,rightLower:i?1:2}})),f}const Funnel3DComposition={compose:compose};export default Funnel3DComposition;