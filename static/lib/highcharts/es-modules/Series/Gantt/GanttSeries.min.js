"use strict";import GanttPoint from"./GanttPoint.js";import GanttSeriesDefaults from"./GanttSeriesDefaults.js";import Pathfinder from"../../Gantt/Pathfinder.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{xrange:XRangeSeries}}=SeriesRegistry;import StaticScale from"../../Extensions/StaticScale.js";import TreeGridAxis from"../../Core/Axis/TreeGrid/TreeGridAxis.js";import U from"../../Core/Utilities.js";const{extend,isNumber,merge}=U;class GanttSeries extends XRangeSeries{static compose(e,t,s,r){XRangeSeries.compose(e),t&&(StaticScale.compose(e,t),s&&(Pathfinder.compose(t,s.prototype.pointClass),r&&TreeGridAxis.compose(e,t,s,r)))}drawPoint(e,t){const s=this,r=s.options,i=s.chart.renderer,a=e.shapeArgs,o=e.plotY,n=e.selected&&"select",p=r.stacking&&!r.borderRadius;let d=e.graphic,l;e.options.milestone?isNumber(o)&&null!==e.y&&!1!==e.visible?(l=i.symbols.diamond(a.x||0,a.y||0,a.width||0,a.height||0),d?d[t]({d:l}):e.graphic=d=i.path(l).addClass(e.getClassName(),!0).add(e.group||s.group),s.chart.styledMode||e.graphic.attr(s.pointAttribs(e,n)).shadow(r.shadow,null,p)):d&&(e.graphic=d.destroy()):super.drawPoint(e,t)}translatePoint(e){var t,s;super.translatePoint(e),e.options.milestone&&(s=(t=e.shapeArgs).height||0,e.shapeArgs={x:(t.x||0)-s/2,y:t.y,width:s,height:s})}}GanttSeries.defaultOptions=merge(XRangeSeries.defaultOptions,GanttSeriesDefaults),extend(GanttSeries.prototype,{pointArrayMap:["start","end","y"],pointClass:GanttPoint,setData:Series.prototype.setData}),SeriesRegistry.registerSeriesType("gantt",GanttSeries);export default GanttSeries;