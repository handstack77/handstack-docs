"use strict";import A from"../../Core/Animation/AnimationUtilities.js";const{animObject,stop}=A;import ColorMapComposition from"../ColorMapComposition.js";import CU from"../CenteredUtilities.js";import H from"../../Core/Globals.js";const noop=H["noop"];import MapChart from"../../Core/Chart/MapChart.js";const splitPath=MapChart["splitPath"];import MapPoint from"./MapPoint.js";import MapSeriesDefaults from"./MapSeriesDefaults.js";import MapView from"../../Maps/MapView.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{column:ColumnSeries,scatter:ScatterSeries}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{extend,find,fireEvent,getNestedProperty,isArray,defined,isNumber,isObject,merge,objectEach,pick,splat}=U;class MapSeries extends ScatterSeries{constructor(){super(...arguments),this.processedData=[]}animate(t){const{chart:e,group:s}=this,i=animObject(this.options.animation);t?s.attr({translateX:e.plotLeft+e.plotWidth/2,translateY:e.plotTop+e.plotHeight/2,scaleX:.001,scaleY:.001}):s.animate({translateX:e.plotLeft,translateY:e.plotTop,scaleX:1,scaleY:1},i)}clearBounds(){this.points.forEach(t=>{delete t.bounds,delete t.insetIndex,delete t.projectedPath}),delete this.bounds}doFullTranslate(){return Boolean(this.isDirtyData||this.chart.isResizing||!this.hasRendered)}drawMapDataLabels(){super.drawDataLabels(),this.dataLabelsGroup&&this.dataLabelsGroup.clip(this.chart.clipRect)}drawPoints(){const m=this,{chart:u,group:s,transformGroups:i=[]}=this,{mapView:f,renderer:b}=u;if(f){(this.transformGroups=i)[0]||(i[0]=b.g().add(s));for(let t=0,e=f.insets.length;t<e;++t)i[t+1]||i.push(b.g().add(s));this.doFullTranslate()&&(this.points.forEach(t=>{const e=t["graphic"];t.group=i["number"==typeof t.insetIndex?t.insetIndex+1:0],e&&e.parentGroup!==t.group&&e.add(t.group)}),ColumnSeries.prototype.drawPoints.apply(this),this.points.forEach(e=>{const a=e.graphic;if(a){const n=a.animate;let t="";e.name&&(t+="highcharts-name-"+e.name.replace(/ /g,"-").toLowerCase()),e.properties&&e.properties["hc-key"]&&(t+=" highcharts-key-"+e.properties["hc-key"].toString().toLowerCase()),t&&a.addClass(t),u.styledMode&&a.css(this.pointAttribs(e,e.selected?"select":void 0)),a.attr({visibility:e.visible||!e.visible&&!e.isNull?"inherit":"hidden"}),a.animate=function(t,e,s){var i,o=isNumber(t["stroke-width"])&&!isNumber(a["stroke-width"]),r=isNumber(a["stroke-width"])&&!isNumber(t["stroke-width"]),o=((o||r)&&(i=pick(m.getStrokeWidth(m.options),1)/(u.mapView&&u.mapView.getScale()||1),o&&(a["stroke-width"]=i),r&&(t["stroke-width"]=i)),n.call(a,t,e,r?function(){a.element.removeAttribute("stroke-width"),delete a["stroke-width"],s&&s.apply(this,arguments)}:s));return o}}})),i.forEach((i,t)=>{const e=0===t?f:f.insets[t-1],o=e.getSVGTransform(),r=pick(this.getStrokeWidth(this.options),1),a=o.scaleX,n=0<o.scaleY?1:-1,p=i=>{(m.points||[]).forEach(t=>{const e=t.graphic;let s;e&&e["stroke-width"]&&(s=this.getStrokeWidth(t.options))&&e.attr({"stroke-width":s/i})})};if(b.globalAnimation&&u.hasRendered&&f.allowTransformAnimation){const l=Number(i.attr("translateX")),h=Number(i.attr("translateY")),d=Number(i.attr("scaleX")),s=merge(animObject(b.globalAnimation)),c=s.step;s.step=function(){c&&c.apply(this,arguments),((t,e)=>{var s=d+(a-d)*e.pos;i.attr({translateX:l+(o.translateX-l)*e.pos,translateY:h+(o.translateY-h)*e.pos,scaleX:s,scaleY:s*n,"stroke-width":r/s}),p(s)}).apply(this,arguments)},i.attr({animator:0}).animate({animator:1},s,function(){"boolean"!=typeof b.globalAnimation&&b.globalAnimation.complete&&b.globalAnimation.complete({applyDrilldown:!0}),fireEvent(this,"mapZoomComplete")}.bind(this))}else stop(i),i.attr(merge(o,{"stroke-width":r/a})),p(a)}),this.isDrilling||this.drawMapDataLabels()}}getProjectedBounds(){if(!this.bounds&&this.chart.mapView){const{insets:r,projection:a}=this.chart.mapView,t=[];(this.points||[]).forEach(e=>{if(e.path||e.geometry){if("string"==typeof e.path?e.path=splitPath(e.path):isArray(e.path)&&"M"===e.path[0]&&(e.path=this.chart.renderer.pathToSegments(e.path)),!e.bounds){let t=e.getProjectedBounds(a);if(t){e.labelrank=pick(e.labelrank,(t.x2-t.x1)*(t.y2-t.y1));const{midX:s,midY:i}=t;if(r&&isNumber(s)&&isNumber(i)){const o=find(r,t=>t.isInside({x:s,y:i}));o&&(delete e.projectedPath,(t=e.getProjectedBounds(o.projection))&&o.allBounds.push(t),e.insetIndex=r.indexOf(o))}e.bounds=t}}e.bounds&&void 0===e.insetIndex&&t.push(e.bounds)}}),this.bounds=MapView.compositeBounds(t)}return this.bounds}getStrokeWidth(t){var e=this.pointAttrToOptions;return t[e&&e["stroke-width"]||"borderWidth"]}hasData(){return!!this.processedXData.length}pointAttribs(t,e){const{mapView:s,styledMode:i}=t.series.chart,o=i?this.colorAttribs(t):ColumnSeries.prototype.pointAttribs.call(this,t,e);let r=this.getStrokeWidth(t.options);e&&(e=merge(this.options.states&&this.options.states[e],t.options.states&&t.options.states[e]||{}),a=this.getStrokeWidth(e),defined(a)&&(r=a),o.stroke=e.borderColor??t.color),r&&s&&(r/=s.getScale());var a=this.getStrokeWidth(this.options);return o.dashstyle&&s&&isNumber(a)&&(r=a/s.getScale()),t.visible||(o.fill=this.options.nullColor),defined(r)?o["stroke-width"]=r:delete o["stroke-width"],o["stroke-linecap"]=o["stroke-linejoin"]=this.options.linecap,o}updateData(){return!this.processedData&&super.updateData.apply(this,arguments)}setData(t,e=!0,s,i){delete this.bounds,super.setData(t,!1,void 0,i),this.processData(),this.generatePoints(),e&&this.chart.redraw(s)}processData(){const i=this.options,e=i.data,t=this.chart,s=t.options.chart,o=this.joinBy,r=i.keys||this.pointArrayMap,a=[],n={},p=this.chart.mapView,l=p&&(isObject(i.mapData,!0)?p.getGeoMap(i.mapData):p.geoMap),h=t.mapTransforms=s.mapTransforms||l&&l["hc-transform"]||t.mapTransforms;let d,c;h&&objectEach(h,t=>{t.rotation&&(t.cosAngle=Math.cos(t.rotation),t.sinAngle=Math.sin(t.rotation))});let m;isArray(i.mapData)?m=i.mapData:l&&"FeatureCollection"===l.type&&(this.mapTitle=l.title,m=H.geojson(l,this.type,this)),this.processedData=[];const u=this.processedData;var f;if(e)for(let s=0,t=e.length;s<t;++s){if(f=e[s],isNumber(f))u[s]={value:f};else if(isArray(f)){let e=0;u[s]={},!i.keys&&f.length>r.length&&"string"==typeof f[0]&&(u[s]["hc-key"]=f[0],++e);for(let t=0;t<r.length;++t,++e)r[t]&&void 0!==f[e]&&(0<r[t].indexOf(".")?MapPoint.prototype.setNestedProperty(u[s],f[e],r[t]):u[s][r[t]]=f[e])}else u[s]=e[s];o&&"_i"===o[0]&&(u[s]._i=s)}if(m){this.mapData=m,this.mapMap={};for(let t=0;t<m.length;t++)c=(d=m[t]).properties,d._i=t,o[0]&&c&&c[o[0]]&&(d[o[0]]=c[o[0]]),n[d[o[0]]]=d;if(this.mapMap=n,o[1]){const b=o[1];u.forEach(t=>{t=getNestedProperty(b,t);n[t]&&a.push(n[t])})}if(i.allAreas){if(o[1]){const y=o[1];u.forEach(t=>{a.push(getNestedProperty(y,t))})}const g="|"+a.map(function(t){return t&&t[o[0]]}).join("|")+"|";m.forEach(t=>{o[0]&&-1!==g.indexOf("|"+t[o[0]]+"|")||u.push(merge(t,{value:null}))})}}this.processedXData=new Array(u.length)}setOptions(t){t=super.setOptions(t);let e=t.joinBy;return null===t.joinBy&&(e="_i"),(e=this.joinBy=splat(e))[1]||(e[1]=e[0]),t}translate(){const s=this.doFullTranslate(),i=this.chart.mapView,o=i&&i.projection;if(!this.chart.hasRendered||!this.isDirtyData&&this.hasRendered||(this.processData(),this.generatePoints(),delete this.bounds,!i||i.userOptions.center||isNumber(i.userOptions.zoom)||i.zoom!==i.minZoom?this.getProjectedBounds():i.fitToBounds(void 0,void 0,!1)),i){const r=i.getSVGTransform();this.points.forEach(t=>{var e=isNumber(t.insetIndex)&&i.insets[t.insetIndex].getSVGTransform()||r;e&&t.bounds&&isNumber(t.bounds.midX)&&isNumber(t.bounds.midY)&&(t.plotX=t.bounds.midX*e.scaleX+e.translateX,t.plotY=t.bounds.midY*e.scaleY+e.translateY),s&&(t.shapeType="path",t.shapeArgs={d:MapPoint.getProjectedPath(t,o)}),t.hiddenInDataClass||(t.projectedPath&&!t.projectedPath.length?t.setVisible(!1):t.visible||t.setVisible(!0))})}fireEvent(this,"afterTranslate")}update(s){s.mapData&&this.chart.mapView?.recommendMapView(this.chart,[this.chart.options.chart.map,...(this.chart.options.series||[]).map((t,e)=>(e===this._i?s:t).mapData)],!0),super.update.apply(this,arguments)}}MapSeries.defaultOptions=merge(ScatterSeries.defaultOptions,MapSeriesDefaults),extend(MapSeries.prototype,{type:"map",axisTypes:ColorMapComposition.seriesMembers.axisTypes,colorAttribs:ColorMapComposition.seriesMembers.colorAttribs,colorKey:ColorMapComposition.seriesMembers.colorKey,directTouch:!0,drawDataLabels:noop,drawGraph:noop,forceDL:!0,getCenter:CU.getCenter,getExtremesFromAll:!0,getSymbol:noop,isCartesian:!1,parallelArrays:ColorMapComposition.seriesMembers.parallelArrays,pointArrayMap:ColorMapComposition.seriesMembers.pointArrayMap,pointClass:MapPoint,preserveAspectRatio:!0,searchPoint:noop,trackerGroups:ColorMapComposition.seriesMembers.trackerGroups,useMapGeometry:!0}),ColorMapComposition.compose(MapSeries),SeriesRegistry.registerSeriesType("map",MapSeries);export default MapSeries;