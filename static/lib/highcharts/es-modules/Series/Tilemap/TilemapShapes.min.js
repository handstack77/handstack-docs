"use strict";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{heatmap:HeatmapSeries,scatter:ScatterSeries}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{clamp,pick}=U;function tilePaddingFromTileSize(e,t,a){e=e.options;return{xPad:(e.colsize||1)/-t,yPad:(e.rowsize||1)/-a}}const TilemapShapes={hexagon:{alignDataLabel:ScatterSeries.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,3,2)},haloPath:function(e){if(!e)return[];var t=this.tileEdges;return[["M",t.x2-e,t.y1+e],["L",t.x3+e,t.y1+e],["L",t.x4+1.5*e,t.y2],["L",t.x3+e,t.y3-e],["L",t.x2-e,t.y3-e],["L",t.x1-1.5*e,t.y2],["Z"]]},translate:function(){const e=this,t=e.options,s=e.xAxis,i=e.yAxis,p=t.pointPadding||0,d=(t.colsize||1)/3,h=(t.rowsize||1)/2;let c;e.generatePoints();for(const m of e.points){let e=clamp(Math.floor(s.len-s.translate(m.x-2*d,0,1,0,1)),-s.len,2*s.len),t=clamp(Math.floor(s.len-s.translate(m.x-d,0,1,0,1)),-s.len,2*s.len),a=clamp(Math.floor(s.len-s.translate(m.x+d,0,1,0,1)),-s.len,2*s.len),n=clamp(Math.floor(s.len-s.translate(m.x+2*d,0,1,0,1)),-s.len,2*s.len),l=clamp(Math.floor(i.translate(m.y-h,0,1,0,1)),-i.len,2*i.len),r=clamp(Math.floor(i.translate(m.y,0,1,0,1)),-i.len,2*i.len),o=clamp(Math.floor(i.translate(m.y+h,0,1,0,1)),-i.len,2*i.len);var y=m.pointPadding??p,x=y*Math.abs(t-e)/Math.abs(o-r),x=s.reversed?-x:x,g=s.reversed?-y:y,y=i.reversed?-y:y;m.x%2&&(c=c||Math.round(Math.abs(o-l)/2)*(i.reversed?-1:1),l+=c,r+=c,o+=c),m.plotX=m.clientX=(t+a)/2,m.plotY=r,e+=x+g,t+=g,a-=g,n-=x+g,l-=y,o+=y,m.tileEdges={x1:e,x2:t,x3:a,x4:n,y1:l,y2:r,y3:o},m.shapeType="path",m.shapeArgs={d:[["M",t,l],["L",a,l],["L",n,r],["L",a,o],["L",t,o],["L",e,r],["Z"]]}}e.translateColors()}},diamond:{alignDataLabel:ScatterSeries.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,2,2)},haloPath:function(e){if(!e)return[];var t=this.tileEdges;return[["M",t.x2,t.y1+e],["L",t.x3+e,t.y2],["L",t.x2,t.y3-e],["L",t.x1-e,t.y2],["Z"]]},translate:function(){const e=this,t=e.options,r=e.xAxis,o=e.yAxis,s=t.pointPadding||0,i=t.colsize||1,p=(t.rowsize||1)/2;var d;e.generatePoints();for(const x of e.points){let e=clamp(Math.round(r.len-r.translate(x.x-i,0,1,0,0)),-r.len,2*r.len),t=clamp(Math.round(r.len-r.translate(x.x+i,0,1,0,0)),-r.len,2*r.len),a=clamp(Math.round(o.translate(x.y-p,0,1,0,0)),-o.len,2*o.len),n=clamp(Math.round(o.translate(x.y,0,1,0,0)),-o.len,2*o.len),l=clamp(Math.round(o.translate(x.y+p,0,1,0,0)),-o.len,2*o.len);var h=clamp(Math.round(r.len-r.translate(x.x,0,1,0,0)),-r.len,2*r.len),c=pick(x.pointPadding,s),y=c*Math.abs(h-e)/Math.abs(l-n),y=r.reversed?-y:y,c=o.reversed?-c:c;x.x%2&&(d=Math.abs(l-a)/2*(o.reversed?-1:1),a+=d,n+=d,l+=d),x.plotX=x.clientX=h,x.plotY=n,e+=y,t-=y,a-=c,l+=c,x.tileEdges={x1:e,x2:h,x3:t,y1:a,y2:n,y3:l},x.shapeType="path",x.shapeArgs={d:[["M",h,a],["L",t,n],["L",h,l],["L",e,n],["Z"]]}}e.translateColors()}},circle:{alignDataLabel:ScatterSeries.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,2,2)},haloPath:function(e){return ScatterSeries.prototype.pointClass.prototype.haloPath.call(this,e+(e&&this.radius))},translate:function(){const e=this,t=e.options,n=e.xAxis,l=e.yAxis,r=t.pointPadding||0,o=(t.rowsize||1)/2,s=t.colsize||1;let i,p,d,h,c=!1;e.generatePoints();for(const x of e.points){var y=clamp(Math.round(n.len-n.translate(x.x,0,1,0,0)),-n.len,2*n.len);let e=r,t=!1,a=clamp(Math.round(l.translate(x.y,0,1,0,0)),-l.len,2*l.len);void 0!==x.pointPadding&&(e=x.pointPadding,t=!0,c=!0),h&&!c||(i=Math.abs(clamp(Math.floor(n.len-n.translate(x.x+s,0,1,0,0)),-n.len,2*n.len)-y),p=Math.abs(clamp(Math.floor(l.translate(x.y+o,0,1,0,0)),-l.len,2*l.len)-a),d=Math.floor(Math.sqrt(i*i+p*p)/2),h=Math.min(i,d,p)-e,c&&!t&&(c=!1)),x.x%2&&(a+=p*(l.reversed?-1:1)),x.plotX=x.clientX=y,x.plotY=a,x.radius=h,x.shapeType="circle",x.shapeArgs={x:y,y:a,r:h}}e.translateColors()}},square:{alignDataLabel:HeatmapSeries.prototype.alignDataLabel,translate:HeatmapSeries.prototype.translate,getSeriesPadding:noop,haloPath:HeatmapSeries.prototype.pointClass.prototype.haloPath}};export default TilemapShapes;