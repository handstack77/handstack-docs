"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{prototype:{pointClass:AreaPoint,pointClass:{prototype:areaProto}}}=SeriesRegistry.seriesTypes["area"];import U from"../../Core/Utilities.js";const{defined,isNumber}=U;class AreaRangePoint extends AreaPoint{setState(){const t=this.state,i=this.series,s=i.chart.polar;defined(this.plotHigh)||(this.plotHigh=i.yAxis.toPixels(this.high,!0)),defined(this.plotLow)||(this.plotLow=this.plotY=i.yAxis.toPixels(this.low,!0)),i.lowerStateMarkerGraphic=i.stateMarkerGraphic,i.stateMarkerGraphic=i.upperStateMarkerGraphic,this.graphic=this.graphics&&this.graphics[1],this.plotY=this.plotHigh,s&&isNumber(this.plotHighX)&&(this.plotX=this.plotHighX),areaProto.setState.apply(this,arguments),this.state=t,this.plotY=this.plotLow,this.graphic=this.graphics&&this.graphics[0],s&&isNumber(this.plotLowX)&&(this.plotX=this.plotLowX),i.upperStateMarkerGraphic=i.stateMarkerGraphic,i.stateMarkerGraphic=i.lowerStateMarkerGraphic,i.lowerStateMarkerGraphic=void 0;var e=i.modifyMarkerSettings();areaProto.setState.apply(this,arguments),i.restoreMarkerSettings(e)}haloPath(){var t=this.series.chart.polar;let i=[];return this.plotY=this.plotLow,t&&isNumber(this.plotLowX)&&(this.plotX=this.plotLowX),this.isInside&&(i=areaProto.haloPath.apply(this,arguments)),this.plotY=this.plotHigh,t&&isNumber(this.plotHighX)&&(this.plotX=this.plotHighX),i=this.isTopInside?i.concat(areaProto.haloPath.apply(this,arguments)):i}isValid(){return isNumber(this.low)&&isNumber(this.high)}}export default AreaRangePoint;