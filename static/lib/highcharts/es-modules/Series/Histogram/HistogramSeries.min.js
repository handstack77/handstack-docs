"use strict";import DerivedComposition from"../DerivedComposition.js";import HistogramSeriesDefaults from"./HistogramSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const ColumnSeries=SeriesRegistry.seriesTypes["column"];import U from"../../Core/Utilities.js";const{arrayMax,arrayMin,correctFloat,extend,isNumber,merge}=U,binsNumberFormulas={"square-root":function(e){return Math.ceil(Math.sqrt(e.options.data.length))},sturges:function(e){return Math.ceil(Math.log(e.options.data.length)*Math.LOG2E)},rice:function(e){return Math.ceil(2*Math.pow(e.options.data.length,1/3))}};function fitToBinLeftClosed(r){return function(e){let t=1;for(;r[t]<=e;)t++;return r[--t]}}class HistogramSeries extends ColumnSeries{binsNumber(){var e=this.options.binsNumber;const t=binsNumberFormulas[e]||"function"==typeof e&&e;return Math.ceil(t&&t(this.baseSeries)||(isNumber(e)?e:binsNumberFormulas["square-root"](this.baseSeries)))}derivedData(e,t,r){const s=this,i=correctFloat(arrayMax(e)),o=correctFloat(arrayMin(e)),a=[],n={},m=[];let u;for(r=s.binWidth=correctFloat(isNumber(r)?r||1:(i-o)/t),s.options.pointRange=Math.max(r,0),u=o;u<i&&(s.userOptions.binWidth||correctFloat(i-u)>=r||correctFloat(correctFloat(o+a.length*r)-u)<=0);u=correctFloat(u+r))a.push(u),n[u]=0;0!==n[o]&&(a.push(o),n[o]=0);const c=fitToBinLeftClosed(a.map(e=>parseFloat(e)));for(const l of e)n[correctFloat(c(l))]++;for(const h of Object.keys(n))m.push({x:Number(h),y:n[h],x2:correctFloat(Number(h)+r)});return m.sort((e,t)=>e.x-t.x),m[m.length-1].x2=i,m}setDerivedData(){var e=this.baseSeries.yData;e.length?(e=this.derivedData(e,this.binsNumber(),this.options.binWidth),this.setData(e,!1)):this.setData([])}}HistogramSeries.defaultOptions=merge(ColumnSeries.defaultOptions,HistogramSeriesDefaults),extend(HistogramSeries.prototype,{hasDerivedData:DerivedComposition.hasDerivedData}),DerivedComposition.compose(HistogramSeries),SeriesRegistry.registerSeriesType("histogram",HistogramSeries);export default HistogramSeries;