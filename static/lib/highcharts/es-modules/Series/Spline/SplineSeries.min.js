"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const LineSeries=SeriesRegistry.seriesTypes["line"];import U from"../../Core/Utilities.js";const{merge,pick}=U;class SplineSeries extends LineSeries{getPointSpline(i,t,r){const s=1.5,o=2.5,n=t.plotX||0,l=t.plotY||0,p=i[r-1],S=i[r+1];let g,c,h,a;function e(e){return e&&!e.isNull&&!1!==e.doCurve&&!t.isCliff}if(e(p)&&e(S)){var i=p.plotX||0,r=p.plotY||0,C=S.plotX||0,m=S.plotY||0;let e=0;g=(s*n+i)/o,c=(s*l+r)/o,h=(s*n+C)/o,a=(s*l+m)/o,h!==g&&(e=(a-c)*(h-n)/(h-g)+l-a),c+=e,a+=e,c>r&&c>l?(c=Math.max(r,l),a=2*l-c):c<r&&c<l&&(c=Math.min(r,l),a=2*l-c),a>m&&a>l?(a=Math.max(m,l),c=2*l-a):a<m&&a<l&&(a=Math.min(m,l),c=2*l-a),t.rightContX=h,t.rightContY=a,t.controlPoints={low:[g,c],high:[h,a]}}i=["C",pick(p.rightContX,p.plotX,0),pick(p.rightContY,p.plotY,0),pick(g,n,0),pick(c,l,0),n,l];return p.rightContX=p.rightContY=void 0,i}}SplineSeries.defaultOptions=merge(LineSeries.defaultOptions),SeriesRegistry.registerSeriesType("spline",SplineSeries);export default SplineSeries;