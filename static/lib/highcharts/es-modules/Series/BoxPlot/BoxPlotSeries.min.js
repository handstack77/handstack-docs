"use strict";import BoxPlotSeriesDefaults from"./BoxPlotSeriesDefaults.js";import ColumnSeries from"../Column/ColumnSeries.js";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";const{crisp,extend,merge,pick}=U;class BoxPlotSeries extends ColumnSeries{pointAttribs(){return{}}translate(){const t=this,o=t.yAxis,s=t.pointArrayMap;super.translate.apply(t),t.points.forEach(function(e){s.forEach(function(t){null!==e[t]&&(e[t+"Plot"]=o.translate(e[t],0,1,0,1))}),e.plotHigh=e.highPlot})}drawPoints(){const e=this,t=e.points,o=e.options,s=e.chart,i=s.renderer,r=!1!==e.doQuartiles,l=e.options.whiskerLength;let a,h,d,p,n,m,c,S,k,y,x;for(const g of t){const u=(m=g.graphic)?"animate":"attr",C=g.shapeArgs,P={},b={},W={},D={},L=g.color||e.color;if(void 0!==g.plotY){c=C.width,S=C.x,k=S+c,y=c/2,a=r?g.q1Plot:g.lowPlot,h=r?g.q3Plot:g.lowPlot,d=g.highPlot,p=g.lowPlot,m||(g.graphic=m=i.g("point").add(e.group),g.stem=i.path().addClass("highcharts-boxplot-stem").add(m),l&&(g.whiskers=i.path().addClass("highcharts-boxplot-whisker").add(m)),r&&(g.box=i.path(void 0).addClass("highcharts-boxplot-box").add(m)),g.medianShape=i.path(void 0).addClass("highcharts-boxplot-median").add(m)),s.styledMode||(b.stroke=g.stemColor||o.stemColor||L,b["stroke-width"]=pick(g.stemWidth,o.stemWidth,o.lineWidth),b.dashstyle=g.stemDashStyle||o.stemDashStyle||o.dashStyle,g.stem.attr(b),l&&(W.stroke=g.whiskerColor||o.whiskerColor||L,W["stroke-width"]=pick(g.whiskerWidth,o.whiskerWidth,o.lineWidth),W.dashstyle=g.whiskerDashStyle||o.whiskerDashStyle||o.dashStyle,g.whiskers.attr(W)),r&&(P.fill=g.fillColor||o.fillColor||L,P.stroke=o.lineColor||L,P["stroke-width"]=o.lineWidth||0,P.dashstyle=g.boxDashStyle||o.boxDashStyle||o.dashStyle,g.box.attr(P)),D.stroke=g.medianColor||o.medianColor||L,D["stroke-width"]=pick(g.medianWidth,o.medianWidth,o.lineWidth),D.dashstyle=g.medianDashStyle||o.medianDashStyle||o.dashStyle,g.medianShape.attr(D));let t;var w,f=crisp((g.plotX||0)+(e.pointXOffset||0)+(e.barW||0)/2,g.stem.strokeWidth());t=[["M",f,h],["L",f,d],["M",f,a],["L",f,p]],g.stem[u]({d:t}),r&&(w=g.box.strokeWidth(),a=crisp(a,w),h=crisp(h,w),S=crisp(S,w),k=crisp(k,w),t=[["M",S,h],["L",S,a],["L",k,a],["L",k,h],["L",S,h],["Z"]],g.box[u]({d:t})),l&&(w=g.whiskers.strokeWidth(),d=crisp(g.highPlot,w),p=crisp(g.lowPlot,w),x="string"==typeof l&&/%$/.test(l)?y*parseFloat(l)/100:Number(l)/2,t=[["M",crisp(f-x),d],["L",crisp(f+x),d],["M",crisp(f-x),p],["L",crisp(f+x),p]],g.whiskers[u]({d:t})),n=crisp(g.medianPlot,g.medianShape.strokeWidth()),t=[["M",S,n],["L",k,n]],g.medianShape[u]({d:t})}}}toYData(t){return[t.low,t.q1,t.median,t.q3,t.high]}}BoxPlotSeries.defaultOptions=merge(ColumnSeries.defaultOptions,BoxPlotSeriesDefaults),extend(BoxPlotSeries.prototype,{pointArrayMap:["low","q1","median","q3","high"],pointValKey:"high",drawDataLabels:noop,setStackedPoints:noop}),SeriesRegistry.registerSeriesType("boxplot",BoxPlotSeries);export default BoxPlotSeries;