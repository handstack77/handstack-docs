"use strict";import ArcDiagramPoint from"./ArcDiagramPoint.js";import ArcDiagramSeriesDefaults from"./ArcDiagramSeriesDefaults.js";import SankeyColumnComposition from"../Sankey/SankeyColumnComposition.js";import Series from"../../Core/Series/Series.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import SVGRenderer from"../../Core/Renderer/SVG/SVGRenderer.js";import U from"../../Core/Utilities.js";import SVGElement from"../../Core/Renderer/SVG/SVGElement.js";import TextPath from"../../Extensions/TextPath.js";TextPath.compose(SVGElement);const{symbols}=SVGRenderer["prototype"],{column:ColumnSeries,sankey:SankeySeries}=SeriesRegistry["seriesTypes"],{crisp,extend,merge,pick,relativeLength}=U;class ArcDiagramSeries extends SankeySeries{createNodeColumns(){const h=this,d=h.chart,c=SankeyColumnComposition.compose([],h);return c.sankeyColumn.maxLength=d.inverted?d.plotHeight:d.plotWidth,c.sankeyColumn.getTranslationFactor=e=>{const t=c.slice(),i=this.options.minLinkWidth||0;let o,s=0,r,a,n=0,l=1,p=0,h=(d.plotSizeX||0)-(e.options.marker&&e.options.marker.lineWidth||0)-(c.length-1)*e.nodePadding;for(;c.length;){for(s=h/c.sankeyColumn.sum(),o=!1,r=c.length;r--;){a=c[r].getSum()*s*l;var m=Math.min(d.plotHeight,d.plotWidth);a>m?l=Math.min(m/a,l):a<i&&(c.splice(r,1),h-=i,a=i,o=!0),p+=a*(1-l)/2,n=Math.max(n,a)}if(!o)break}return c.length=0,t.forEach(e=>{e.scale=l,c.push(e)}),c.sankeyColumn.maxRadius=n,c.sankeyColumn.scale=l,c.sankeyColumn.additionalSpace=p,s},c.sankeyColumn.offset=function(t,i){var o=t.series.options.equalNodes,s=h.nodePadding,r=Math.min(d.plotWidth,d.plotHeight,(c.sankeyColumn.maxLength||0)/h.nodes.length-s);let a=c.sankeyColumn.additionalSpace||0,n;for(let e=0;e<c.length;e++){var l=c[e].getSum()*(c.sankeyColumn.scale||0),p=o?r:Math.max(l*i,h.options.minLinkWidth||0);if(n=l?p+s:0,c[e]===t)return{relativeLeft:a+relativeLength(t.options.offset||0,n)};a+=n}},h.nodes.forEach(function(e){e.column=0,c.push(e)}),[c]}translateLink(i){const e=this,t=i.fromNode,o=i.toNode,s=this.chart,r=e.translationFactor,a=i.options,n=e.options,l=pick(a.linkWeight,n.linkWeight,Math.max((i.weight||0)*r*t.scale,e.options.minLinkWidth||0)),p=i.series.options.centeredLinks,h=t.nodeY;var m=(e,t)=>{t=(e.offset(i,t)||0)*r;return Math.min(e.nodeX+t,e.nodeX+(e.shapeArgs&&e.shapeArgs.height||0)-l)};let d=p?t.nodeX+((t.shapeArgs.height||0)-l)/2:m(t,"linksFrom"),c=p?o.nodeX+((o.shapeArgs.height||0)-l)/2:m(o,"linksTo"),g=h;d>c&&([d,c]=[c,d]),n.reversed&&([d,c]=[c,d],g=(s.plotSizeY||0)-g),i.shapeType="path",i.linkBase=[d,d+l,c,c+l];m=(c+l-d)/Math.abs(c+l-d)*pick(n.linkRadius,Math.min(Math.abs(c+l-d)/2,t.nodeY-Math.abs(l)));i.shapeArgs={d:[["M",d,g],["A",(c+l-d)/2,m,0,0,1,c+l,g],["L",c,g],["A",(c-d-l)/2,m-l,0,0,0,d+l,g],["Z"]]},i.dlBox={x:d+(c-d)/2,y:g-m,height:l,width:0},i.tooltipPos=s.inverted?[(s.plotSizeY||0)-i.dlBox.y-l/2,(s.plotSizeX||0)-i.dlBox.x]:[i.dlBox.x,i.dlBox.y+l/2],i.y=i.plotY=1,i.x=i.plotX=1,i.color||(i.color=t.color)}translateNode(t,i){var o=this,s=o.translationFactor,r=o.chart,a=r.inverted?r.plotWidth:r.plotHeight,o=o.options,a=Math.min(r.plotWidth,r.plotHeight,a/t.series.nodes.length-this.nodePadding),n=t.getSum()*(i.sankeyColumn.scale||0),a=o.equalNodes?a:Math.max(n*s,this.options.minLinkWidth||0),l=o.marker?.lineWidth||0,p=i.sankeyColumn.offset(t,s),s=crisp(pick(p&&p.absoluteLeft,(i.sankeyColumn.left(s)||0)+(p&&p.relativeLeft||0)),l),p=merge(o.marker,t.options.marker),h=p.symbol,m=p.radius,p=parseInt(o.offset,10)*((r.inverted?r.plotWidth:r.plotHeight)-(crisp(this.colDistance*(t.column||0)+(p.lineWidth||0)/2,l)+(i.sankeyColumn.scale||0)*(i.sankeyColumn.maxRadius||0)/2))/100;if(t.sum=n){t.nodeX=s,t.nodeY=p;l=s,i=t.options.width||o.width||a,n=t.options.height||o.height||a;let e=p;o.reversed&&(e=(r.plotSizeY||0)-p,r.inverted&&(e=(r.plotSizeY||0)-p)),this.mapOptionsToLevel&&(t.dlOptions=SankeySeries.getDLOptions({level:this.mapOptionsToLevel[t.level],optionsPoint:t.options})),t.plotX=1,t.plotY=1,t.tooltipPos=r.inverted?[(r.plotSizeY||0)-e-n/2,(r.plotSizeX||0)-l-i/2]:[l+i/2,e+n/2],t.shapeType="path",t.shapeArgs={d:symbols[h||"circle"](l,e-(m||n)/2,m||i,m||n),width:m||i,height:m||n},t.dlBox={x:l+i/2,y:e,height:0,width:0}}else t.dlOptions={enabled:!1}}drawDataLabels(){var e;this.options.dataLabels&&(e=this.options.dataLabels.textPath,ColumnSeries.prototype.drawDataLabels.call(this,this.nodes),this.options.dataLabels.textPath=this.options.dataLabels.linkTextPath,ColumnSeries.prototype.drawDataLabels.call(this,this.data),this.options.dataLabels.textPath=e)}pointAttribs(e,t){if(e&&e.isNode){const{...i}=Series.prototype.pointAttribs.apply(this,arguments);return i}return super.pointAttribs.apply(this,arguments)}markerAttribs(e){return e.isNode?super.markerAttribs.apply(this,arguments):{}}}ArcDiagramSeries.defaultOptions=merge(SankeySeries.defaultOptions,ArcDiagramSeriesDefaults),extend(ArcDiagramSeries.prototype,{orderNodes:!1}),ArcDiagramSeries.prototype.pointClass=ArcDiagramPoint,SeriesRegistry.registerSeriesType("arcdiagram",ArcDiagramSeries);export default ArcDiagramSeries;