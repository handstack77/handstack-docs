!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/aroon-oscillator",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(s){"use strict";var t=s?s._modules:{};function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o),"function"==typeof CustomEvent&&s.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e){const y=t.seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:A}=e;var o;{t=o=o||{};const n=["bottomLine"],l=["top","bottom"],p=["top"];function x(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function C(t,e){const o=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&o.push(x(t))}),o}function i(){const o=this,t=o.pointValKey,e=o.linesApiNames,i=o.areaLinesNames,s=o.points,a=o.options,r=o.graph,n={options:{gapSize:a.gapSize}},l=[],p=C(o,t);let h=s.length,c;var u,f,d;p.forEach((t,e)=>{for(l[e]=[];h--;)c=s[h],l[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!g(c[t])});h=s.length}),o.userOptions.fillColor&&i.length&&(u=p.indexOf(x(i[0])),u=l[u],f=1===i.length?s:l[p.indexOf(x(i[1]))],d=o.color,o.points=f,o.nextPoints=u,o.color=o.userOptions.fillColor,o.options=A(s,n),o.graph=o.area,o.fillGraph=!0,y.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=d),e.forEach((t,e)=>{l[e]?(o.points=l[e],a[t]?o.options=A(a[t].styles,n):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+t],y.drawGraph.call(o),o["graph"+t]=o.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=s,o.options=a,o.graph=r,y.drawGraph.call(o)}function s(t){let e,o=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=y.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",o=y.getGraphPath.call(this,t);for(let t=(i=e.slice(0,o.length)).length-1;0<=t;t--)o.push(i[t])}}else o=y.getGraphPath.apply(this,arguments);return o}function a(e){const o=[];return(this.pointArrayMap||[]).forEach(t=>{o.push(e[t])}),o}function r(){const t=this.pointArrayMap;let i,s;i=C(this),y.translate.apply(this,arguments),this.points.forEach(o=>{t.forEach((t,e)=>{s=o[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(o[i[e]]=this.yAxis.toPixels(s,!0))})})}t.compose=function(t){const e=t.prototype;return e.linesApiNames=e.linesApiNames||n.slice(),e.pointArrayMap=e.pointArrayMap||l.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||p.slice(),e.drawGraph=i,e.getGraphPath=s,e.toYData=a,e.translate=r,t}}return o}),e(t,"Stock/Indicators/AroonOscillator/AroonOscillatorIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o){var i=e.seriesTypes["aroon"];const{extend:s,merge:a}=o;class r extends i{getValues(t,e){const o=[],i=[],s=[];let a,r;var n=super.getValues.call(this,t,e);for(r=0;r<n.yData.length;r++)a=n.yData[r][0]-n.yData[r][1],o.push([n.xData[r],a]),i.push(n.xData[r]),s.push(a);return{values:o,xData:i,yData:s}}}return r.defaultOptions=a(i.defaultOptions,{tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b>: {point.y}'}}),s(r.prototype,{nameBase:"Aroon Oscillator",linesApiNames:[],pointArrayMap:["y"],pointValKey:"y"}),t.compose(i),e.registerSeriesType("aroonoscillator",r),r}),e(t,"masters/indicators/aroon-oscillator.src.js",[t["Core/Globals.js"]],function(t){return t})});