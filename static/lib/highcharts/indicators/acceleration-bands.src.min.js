!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(o){"use strict";var t=o?o._modules:{};function e(t,e,a,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,a),"function"==typeof CustomEvent&&o.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e){const m=t.seriesTypes["sma"]["prototype"],{defined:y,error:g,merge:x}=e;var a;{t=a=a||{};const r=["bottomLine"],p=["top","bottom"],l=["top"];function A(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function D(t,e){const a=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&a.push(A(t))}),a}function i(){const a=this,t=a.pointValKey,e=a.linesApiNames,i=a.areaLinesNames,o=a.points,s=a.options,n=a.graph,r={options:{gapSize:s.gapSize}},p=[],l=D(a,t);let h=o.length,c;var d,u,f;l.forEach((t,e)=>{for(p[e]=[];h--;)c=o[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!y(c[t])});h=o.length}),a.userOptions.fillColor&&i.length&&(d=l.indexOf(A(i[0])),d=p[d],u=1===i.length?o:p[l.indexOf(A(i[1]))],f=a.color,a.points=u,a.nextPoints=d,a.color=a.userOptions.fillColor,a.options=x(o,r),a.graph=a.area,a.fillGraph=!0,m.drawGraph.call(a),a.area=a.graph,delete a.nextPoints,delete a.fillGraph,a.color=f),e.forEach((t,e)=>{p[e]?(a.points=p[e],s[t]?a.options=x(s[t].styles,r):g('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),a.graph=a["graph"+t],m.drawGraph.call(a),a["graph"+t]=a.graph):g('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),a.points=o,a.options=s,a.graph=n,m.drawGraph.call(a)}function o(t){let e,a=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=m.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",a=m.getGraphPath.call(this,t);for(let t=(i=e.slice(0,a.length)).length-1;0<=t;t--)a.push(i[t])}}else a=m.getGraphPath.apply(this,arguments);return a}function s(e){const a=[];return(this.pointArrayMap||[]).forEach(t=>{a.push(e[t])}),a}function n(){const t=this.pointArrayMap;let i,o;i=D(this),m.translate.apply(this,arguments),this.points.forEach(a=>{t.forEach((t,e)=>{o=a[t],null!==(o=this.dataModify?this.dataModify.modifyValue(o):o)&&(a[i[e]]=this.yAxis.toPixels(o,!0))})})}t.compose=function(t){const e=t.prototype;return e.linesApiNames=e.linesApiNames||r.slice(),e.pointArrayMap=e.pointArrayMap||p.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||l.slice(),e.drawGraph=i,e.getGraphPath=o,e.toYData=s,e.translate=n,t}}return a}),e(t,"Stock/Indicators/ABands/ABandsIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,a){var i=e.seriesTypes["sma"];const{correctFloat:b,extend:o,merge:s}=a;class n extends i{getValues(t,e){const a=e.period,i=e.factor,o=e.index,s=t.xData,n=t.yData,r=n?n.length:0,p=[],l=[],h=[],c=[],d=[];let u,f,m,y,g,x,A,D,C,v,G;if(!(r<a)){for(G=0;G<=r;G++)G<r&&(L=n[G][2],M=n[G][1],S=i,g=b(M-L)/(b(M+L)/2)*1e3*S,p.push((M=n[G][1],L=g,M*b(1+2*L))),l.push((S=n[G][2],M=g,S*b(1-2*M)))),G>=a&&(C=s.slice(G-a,G),v=n.slice(G-a,G),A=super.getValues.call(this,{xData:C,yData:p.slice(G-a,G)},{period:a}),D=super.getValues.call(this,{xData:C,yData:l.slice(G-a,G)},{period:a}),y=(x=super.getValues.call(this,{xData:C,yData:v},{period:a,index:o})).xData[0],f=A.yData[0],m=D.yData[0],u=x.yData[0],h.push([y,f,u,m]),c.push(y),d.push([f,u,m]));var L,M,S;return{values:h,xData:c,yData:d}}}}return n.defaultOptions=s(i.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),o(n.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),t.compose(n),e.registerSeriesType("abands",n),n}),e(t,"masters/indicators/acceleration-bands.src.js",[t["Core/Globals.js"]],function(t){return t})});